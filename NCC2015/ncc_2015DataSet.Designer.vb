'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ncc_2015DataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ncc_2015DataSet
    Inherits Global.System.Data.DataSet
    
    Private tableloo_image As loo_imageDataTable
    
    Private tableloo_medic As loo_medicDataTable
    
    Private tableloo_partner As loo_partnerDataTable
    
    Private tableloo_partner_class As loo_partner_classDataTable
    
    Private tableloo_partner_timetable As loo_partner_timetableDataTable
    
    Private tableloo_user As loo_userDataTable
    
    Private tableloo_sys As loo_sysDataTable
    
    Private tablepartner_info As partner_infoDataTable
    
    Private tableloo_partner_class1 As loo_partner_class1DataTable
    
    Private tableloo_partner_timetable1 As loo_partner_timetable1DataTable
    
    Private relationFKpartner As Global.System.Data.DataRelation
    
    Private relationfk_partner_id As Global.System.Data.DataRelation
    
    Private relationFKpartner1 As Global.System.Data.DataRelation
    
    Private relationfk_partner_id1 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("loo_image")) Is Nothing) Then
                MyBase.Tables.Add(New loo_imageDataTable(ds.Tables("loo_image")))
            End If
            If (Not (ds.Tables("loo_medic")) Is Nothing) Then
                MyBase.Tables.Add(New loo_medicDataTable(ds.Tables("loo_medic")))
            End If
            If (Not (ds.Tables("loo_partner")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partnerDataTable(ds.Tables("loo_partner")))
            End If
            If (Not (ds.Tables("loo_partner_class")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partner_classDataTable(ds.Tables("loo_partner_class")))
            End If
            If (Not (ds.Tables("loo_partner_timetable")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partner_timetableDataTable(ds.Tables("loo_partner_timetable")))
            End If
            If (Not (ds.Tables("loo_user")) Is Nothing) Then
                MyBase.Tables.Add(New loo_userDataTable(ds.Tables("loo_user")))
            End If
            If (Not (ds.Tables("loo_sys")) Is Nothing) Then
                MyBase.Tables.Add(New loo_sysDataTable(ds.Tables("loo_sys")))
            End If
            If (Not (ds.Tables("partner_info")) Is Nothing) Then
                MyBase.Tables.Add(New partner_infoDataTable(ds.Tables("partner_info")))
            End If
            If (Not (ds.Tables("loo_partner_class1")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partner_class1DataTable(ds.Tables("loo_partner_class1")))
            End If
            If (Not (ds.Tables("loo_partner_timetable1")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partner_timetable1DataTable(ds.Tables("loo_partner_timetable1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_image() As loo_imageDataTable
        Get
            Return Me.tableloo_image
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_medic() As loo_medicDataTable
        Get
            Return Me.tableloo_medic
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_partner() As loo_partnerDataTable
        Get
            Return Me.tableloo_partner
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_partner_class() As loo_partner_classDataTable
        Get
            Return Me.tableloo_partner_class
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_partner_timetable() As loo_partner_timetableDataTable
        Get
            Return Me.tableloo_partner_timetable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_user() As loo_userDataTable
        Get
            Return Me.tableloo_user
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_sys() As loo_sysDataTable
        Get
            Return Me.tableloo_sys
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property partner_info() As partner_infoDataTable
        Get
            Return Me.tablepartner_info
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_partner_class1() As loo_partner_class1DataTable
        Get
            Return Me.tableloo_partner_class1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property loo_partner_timetable1() As loo_partner_timetable1DataTable
        Get
            Return Me.tableloo_partner_timetable1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ncc_2015DataSet = CType(MyBase.Clone,ncc_2015DataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("loo_image")) Is Nothing) Then
                MyBase.Tables.Add(New loo_imageDataTable(ds.Tables("loo_image")))
            End If
            If (Not (ds.Tables("loo_medic")) Is Nothing) Then
                MyBase.Tables.Add(New loo_medicDataTable(ds.Tables("loo_medic")))
            End If
            If (Not (ds.Tables("loo_partner")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partnerDataTable(ds.Tables("loo_partner")))
            End If
            If (Not (ds.Tables("loo_partner_class")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partner_classDataTable(ds.Tables("loo_partner_class")))
            End If
            If (Not (ds.Tables("loo_partner_timetable")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partner_timetableDataTable(ds.Tables("loo_partner_timetable")))
            End If
            If (Not (ds.Tables("loo_user")) Is Nothing) Then
                MyBase.Tables.Add(New loo_userDataTable(ds.Tables("loo_user")))
            End If
            If (Not (ds.Tables("loo_sys")) Is Nothing) Then
                MyBase.Tables.Add(New loo_sysDataTable(ds.Tables("loo_sys")))
            End If
            If (Not (ds.Tables("partner_info")) Is Nothing) Then
                MyBase.Tables.Add(New partner_infoDataTable(ds.Tables("partner_info")))
            End If
            If (Not (ds.Tables("loo_partner_class1")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partner_class1DataTable(ds.Tables("loo_partner_class1")))
            End If
            If (Not (ds.Tables("loo_partner_timetable1")) Is Nothing) Then
                MyBase.Tables.Add(New loo_partner_timetable1DataTable(ds.Tables("loo_partner_timetable1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableloo_image = CType(MyBase.Tables("loo_image"),loo_imageDataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_image) Is Nothing) Then
                Me.tableloo_image.InitVars
            End If
        End If
        Me.tableloo_medic = CType(MyBase.Tables("loo_medic"),loo_medicDataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_medic) Is Nothing) Then
                Me.tableloo_medic.InitVars
            End If
        End If
        Me.tableloo_partner = CType(MyBase.Tables("loo_partner"),loo_partnerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_partner) Is Nothing) Then
                Me.tableloo_partner.InitVars
            End If
        End If
        Me.tableloo_partner_class = CType(MyBase.Tables("loo_partner_class"),loo_partner_classDataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_partner_class) Is Nothing) Then
                Me.tableloo_partner_class.InitVars
            End If
        End If
        Me.tableloo_partner_timetable = CType(MyBase.Tables("loo_partner_timetable"),loo_partner_timetableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_partner_timetable) Is Nothing) Then
                Me.tableloo_partner_timetable.InitVars
            End If
        End If
        Me.tableloo_user = CType(MyBase.Tables("loo_user"),loo_userDataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_user) Is Nothing) Then
                Me.tableloo_user.InitVars
            End If
        End If
        Me.tableloo_sys = CType(MyBase.Tables("loo_sys"),loo_sysDataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_sys) Is Nothing) Then
                Me.tableloo_sys.InitVars
            End If
        End If
        Me.tablepartner_info = CType(MyBase.Tables("partner_info"),partner_infoDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepartner_info) Is Nothing) Then
                Me.tablepartner_info.InitVars
            End If
        End If
        Me.tableloo_partner_class1 = CType(MyBase.Tables("loo_partner_class1"),loo_partner_class1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_partner_class1) Is Nothing) Then
                Me.tableloo_partner_class1.InitVars
            End If
        End If
        Me.tableloo_partner_timetable1 = CType(MyBase.Tables("loo_partner_timetable1"),loo_partner_timetable1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableloo_partner_timetable1) Is Nothing) Then
                Me.tableloo_partner_timetable1.InitVars
            End If
        End If
        Me.relationFKpartner = Me.Relations("FKpartner")
        Me.relationfk_partner_id = Me.Relations("fk_partner_id")
        Me.relationFKpartner1 = Me.Relations("FKpartner1")
        Me.relationfk_partner_id1 = Me.Relations("fk_partner_id1")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ncc_2015DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ncc_2015DataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableloo_image = New loo_imageDataTable()
        MyBase.Tables.Add(Me.tableloo_image)
        Me.tableloo_medic = New loo_medicDataTable()
        MyBase.Tables.Add(Me.tableloo_medic)
        Me.tableloo_partner = New loo_partnerDataTable()
        MyBase.Tables.Add(Me.tableloo_partner)
        Me.tableloo_partner_class = New loo_partner_classDataTable()
        MyBase.Tables.Add(Me.tableloo_partner_class)
        Me.tableloo_partner_timetable = New loo_partner_timetableDataTable()
        MyBase.Tables.Add(Me.tableloo_partner_timetable)
        Me.tableloo_user = New loo_userDataTable()
        MyBase.Tables.Add(Me.tableloo_user)
        Me.tableloo_sys = New loo_sysDataTable()
        MyBase.Tables.Add(Me.tableloo_sys)
        Me.tablepartner_info = New partner_infoDataTable()
        MyBase.Tables.Add(Me.tablepartner_info)
        Me.tableloo_partner_class1 = New loo_partner_class1DataTable()
        MyBase.Tables.Add(Me.tableloo_partner_class1)
        Me.tableloo_partner_timetable1 = New loo_partner_timetable1DataTable()
        MyBase.Tables.Add(Me.tableloo_partner_timetable1)
        Me.relationFKpartner = New Global.System.Data.DataRelation("FKpartner", New Global.System.Data.DataColumn() {Me.tableloo_partner.partner_idColumn}, New Global.System.Data.DataColumn() {Me.tableloo_medic.medic_partner_idColumn}, false)
        Me.Relations.Add(Me.relationFKpartner)
        Me.relationfk_partner_id = New Global.System.Data.DataRelation("fk_partner_id", New Global.System.Data.DataColumn() {Me.tableloo_partner.partner_idColumn}, New Global.System.Data.DataColumn() {Me.tableloo_partner_timetable.timetable_partner_idColumn}, false)
        Me.Relations.Add(Me.relationfk_partner_id)
        Me.relationFKpartner1 = New Global.System.Data.DataRelation("FKpartner1", New Global.System.Data.DataColumn() {Me.tablepartner_info.partner_idColumn}, New Global.System.Data.DataColumn() {Me.tableloo_medic.medic_partner_idColumn}, false)
        Me.Relations.Add(Me.relationFKpartner1)
        Me.relationfk_partner_id1 = New Global.System.Data.DataRelation("fk_partner_id1", New Global.System.Data.DataColumn() {Me.tablepartner_info.partner_idColumn}, New Global.System.Data.DataColumn() {Me.tableloo_partner_timetable.timetable_partner_idColumn}, false)
        Me.Relations.Add(Me.relationfk_partner_id1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_image() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_medic() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_partner() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_partner_class() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_partner_timetable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_user() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_sys() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializepartner_info() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_partner_class1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeloo_partner_timetable1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_imageRowChangeEventHandler(ByVal sender As Object, ByVal e As loo_imageRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_medicRowChangeEventHandler(ByVal sender As Object, ByVal e As loo_medicRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_partnerRowChangeEventHandler(ByVal sender As Object, ByVal e As loo_partnerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_partner_classRowChangeEventHandler(ByVal sender As Object, ByVal e As loo_partner_classRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_partner_timetableRowChangeEventHandler(ByVal sender As Object, ByVal e As loo_partner_timetableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_userRowChangeEventHandler(ByVal sender As Object, ByVal e As loo_userRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_sysRowChangeEventHandler(ByVal sender As Object, ByVal e As loo_sysRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub partner_infoRowChangeEventHandler(ByVal sender As Object, ByVal e As partner_infoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_partner_class1RowChangeEventHandler(ByVal sender As Object, ByVal e As loo_partner_class1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub loo_partner_timetable1RowChangeEventHandler(ByVal sender As Object, ByVal e As loo_partner_timetable1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_imageDataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_imageRow)
        
        Private columnimage_id As Global.System.Data.DataColumn
        
        Private columnimage As Global.System.Data.DataColumn
        
        Private columnimage_extension As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_image"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property image_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property image_extensionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage_extension
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_imageRow
            Get
                Return CType(Me.Rows(index),loo_imageRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_imageRowChanging As loo_imageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_imageRowChanged As loo_imageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_imageRowDeleting As loo_imageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_imageRowDeleted As loo_imageRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_imageRow(ByVal row As loo_imageRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_imageRow(ByVal image() As Byte, ByVal image_extension As String) As loo_imageRow
            Dim rowloo_imageRow As loo_imageRow = CType(Me.NewRow,loo_imageRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, image, image_extension}
            rowloo_imageRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_imageRow)
            Return rowloo_imageRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByimage_id(ByVal image_id As Integer) As loo_imageRow
            Return CType(Me.Rows.Find(New Object() {image_id}),loo_imageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_imageDataTable = CType(MyBase.Clone,loo_imageDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_imageDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnimage_id = MyBase.Columns("image_id")
            Me.columnimage = MyBase.Columns("image")
            Me.columnimage_extension = MyBase.Columns("image_extension")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnimage_id = New Global.System.Data.DataColumn("image_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage_id)
            Me.columnimage = New Global.System.Data.DataColumn("image", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage)
            Me.columnimage_extension = New Global.System.Data.DataColumn("image_extension", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage_extension)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnimage_id}, true))
            Me.columnimage_id.AutoIncrement = true
            Me.columnimage_id.AutoIncrementSeed = -1
            Me.columnimage_id.AutoIncrementStep = -1
            Me.columnimage_id.AllowDBNull = false
            Me.columnimage_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_imageRow() As loo_imageRow
            Return CType(Me.NewRow,loo_imageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_imageRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_imageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_imageRowChangedEvent) Is Nothing) Then
                RaiseEvent loo_imageRowChanged(Me, New loo_imageRowChangeEvent(CType(e.Row,loo_imageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_imageRowChangingEvent) Is Nothing) Then
                RaiseEvent loo_imageRowChanging(Me, New loo_imageRowChangeEvent(CType(e.Row,loo_imageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_imageRowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_imageRowDeleted(Me, New loo_imageRowChangeEvent(CType(e.Row,loo_imageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_imageRowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_imageRowDeleting(Me, New loo_imageRowChangeEvent(CType(e.Row,loo_imageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_imageRow(ByVal row As loo_imageRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_imageDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_medicDataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_medicRow)
        
        Private columnmedic_id As Global.System.Data.DataColumn
        
        Private columnmedic_card_number As Global.System.Data.DataColumn
        
        Private columnmedic_entity As Global.System.Data.DataColumn
        
        Private columnmedic_partner_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_medic"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property medic_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmedic_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property medic_card_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmedic_card_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property medic_entityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmedic_entity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property medic_partner_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmedic_partner_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_medicRow
            Get
                Return CType(Me.Rows(index),loo_medicRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_medicRowChanging As loo_medicRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_medicRowChanged As loo_medicRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_medicRowDeleting As loo_medicRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_medicRowDeleted As loo_medicRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_medicRow(ByVal row As loo_medicRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_medicRow(ByVal medic_id As Integer, ByVal medic_card_number As String, ByVal medic_entity As String, ByVal parentloo_partnerRowByFKpartner As loo_partnerRow) As loo_medicRow
            Dim rowloo_medicRow As loo_medicRow = CType(Me.NewRow,loo_medicRow)
            Dim columnValuesArray() As Object = New Object() {medic_id, medic_card_number, medic_entity, Nothing}
            If (Not (parentloo_partnerRowByFKpartner) Is Nothing) Then
                columnValuesArray(3) = parentloo_partnerRowByFKpartner(0)
            End If
            rowloo_medicRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_medicRow)
            Return rowloo_medicRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_medicDataTable = CType(MyBase.Clone,loo_medicDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_medicDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnmedic_id = MyBase.Columns("medic_id")
            Me.columnmedic_card_number = MyBase.Columns("medic_card_number")
            Me.columnmedic_entity = MyBase.Columns("medic_entity")
            Me.columnmedic_partner_id = MyBase.Columns("medic_partner_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnmedic_id = New Global.System.Data.DataColumn("medic_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmedic_id)
            Me.columnmedic_card_number = New Global.System.Data.DataColumn("medic_card_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmedic_card_number)
            Me.columnmedic_entity = New Global.System.Data.DataColumn("medic_entity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmedic_entity)
            Me.columnmedic_partner_id = New Global.System.Data.DataColumn("medic_partner_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmedic_partner_id)
            Me.columnmedic_id.AllowDBNull = false
            Me.columnmedic_card_number.AllowDBNull = false
            Me.columnmedic_entity.AllowDBNull = false
            Me.columnmedic_partner_id.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_medicRow() As loo_medicRow
            Return CType(Me.NewRow,loo_medicRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_medicRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_medicRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_medicRowChangedEvent) Is Nothing) Then
                RaiseEvent loo_medicRowChanged(Me, New loo_medicRowChangeEvent(CType(e.Row,loo_medicRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_medicRowChangingEvent) Is Nothing) Then
                RaiseEvent loo_medicRowChanging(Me, New loo_medicRowChangeEvent(CType(e.Row,loo_medicRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_medicRowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_medicRowDeleted(Me, New loo_medicRowChangeEvent(CType(e.Row,loo_medicRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_medicRowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_medicRowDeleting(Me, New loo_medicRowChangeEvent(CType(e.Row,loo_medicRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_medicRow(ByVal row As loo_medicRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_medicDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_partnerDataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_partnerRow)
        
        Private columnpartner_id As Global.System.Data.DataColumn
        
        Private columnpartner_name As Global.System.Data.DataColumn
        
        Private columnpartner_birthdate As Global.System.Data.DataColumn
        
        Private columnpartner_add_date As Global.System.Data.DataColumn
        
        Private columnpartner_gender As Global.System.Data.DataColumn
        
        Private columnpartner_cc As Global.System.Data.DataColumn
        
        Private columnpartner_nif As Global.System.Data.DataColumn
        
        Private columnpartner_address As Global.System.Data.DataColumn
        
        Private columnpartner_postal As Global.System.Data.DataColumn
        
        Private columnpartner_city As Global.System.Data.DataColumn
        
        Private columnpartner_phone As Global.System.Data.DataColumn
        
        Private columnpartner_mobile As Global.System.Data.DataColumn
        
        Private columnpartner_email As Global.System.Data.DataColumn
        
        Private columnpartner_parent As Global.System.Data.DataColumn
        
        Private columnpartner_is_competition As Global.System.Data.DataColumn
        
        Private columnpartner_class As Global.System.Data.DataColumn
        
        Private columnpartner_image_id As Global.System.Data.DataColumn
        
        Private columnpartner_card As Global.System.Data.DataColumn
        
        Private columnpartner_state As Global.System.Data.DataColumn
        
        Private columnpartner_month As Global.System.Data.DataColumn
        
        Private columnpartner_obs As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_partner"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_birthdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_birthdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_add_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_add_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_ccColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_cc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_nifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_nif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_postalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_postal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_phoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_phone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_mobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_mobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_parentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_parent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_is_competitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_is_competition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_classColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_class
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_image_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_image_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_cardColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_card
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_monthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_obsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_obs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_partnerRow
            Get
                Return CType(Me.Rows(index),loo_partnerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partnerRowChanging As loo_partnerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partnerRowChanged As loo_partnerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partnerRowDeleting As loo_partnerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partnerRowDeleted As loo_partnerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_partnerRow(ByVal row As loo_partnerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_partnerRow( _
                    ByVal partner_id As Integer,  _
                    ByVal partner_name As String,  _
                    ByVal partner_birthdate As Date,  _
                    ByVal partner_add_date As Date,  _
                    ByVal partner_gender As Integer,  _
                    ByVal partner_cc As String,  _
                    ByVal partner_nif As String,  _
                    ByVal partner_address As String,  _
                    ByVal partner_postal As String,  _
                    ByVal partner_city As String,  _
                    ByVal partner_phone As String,  _
                    ByVal partner_mobile As String,  _
                    ByVal partner_email As String,  _
                    ByVal partner_parent As Integer,  _
                    ByVal partner_is_competition As Boolean,  _
                    ByVal partner_class As Integer,  _
                    ByVal partner_image_id As Integer,  _
                    ByVal partner_card As String,  _
                    ByVal partner_state As Boolean,  _
                    ByVal partner_month As Integer,  _
                    ByVal partner_obs As String) As loo_partnerRow
            Dim rowloo_partnerRow As loo_partnerRow = CType(Me.NewRow,loo_partnerRow)
            Dim columnValuesArray() As Object = New Object() {partner_id, partner_name, partner_birthdate, partner_add_date, partner_gender, partner_cc, partner_nif, partner_address, partner_postal, partner_city, partner_phone, partner_mobile, partner_email, partner_parent, partner_is_competition, partner_class, partner_image_id, partner_card, partner_state, partner_month, partner_obs}
            rowloo_partnerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_partnerRow)
            Return rowloo_partnerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBypartner_id(ByVal partner_id As Integer) As loo_partnerRow
            Return CType(Me.Rows.Find(New Object() {partner_id}),loo_partnerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_partnerDataTable = CType(MyBase.Clone,loo_partnerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_partnerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpartner_id = MyBase.Columns("partner_id")
            Me.columnpartner_name = MyBase.Columns("partner_name")
            Me.columnpartner_birthdate = MyBase.Columns("partner_birthdate")
            Me.columnpartner_add_date = MyBase.Columns("partner_add_date")
            Me.columnpartner_gender = MyBase.Columns("partner_gender")
            Me.columnpartner_cc = MyBase.Columns("partner_cc")
            Me.columnpartner_nif = MyBase.Columns("partner_nif")
            Me.columnpartner_address = MyBase.Columns("partner_address")
            Me.columnpartner_postal = MyBase.Columns("partner_postal")
            Me.columnpartner_city = MyBase.Columns("partner_city")
            Me.columnpartner_phone = MyBase.Columns("partner_phone")
            Me.columnpartner_mobile = MyBase.Columns("partner_mobile")
            Me.columnpartner_email = MyBase.Columns("partner_email")
            Me.columnpartner_parent = MyBase.Columns("partner_parent")
            Me.columnpartner_is_competition = MyBase.Columns("partner_is_competition")
            Me.columnpartner_class = MyBase.Columns("partner_class")
            Me.columnpartner_image_id = MyBase.Columns("partner_image_id")
            Me.columnpartner_card = MyBase.Columns("partner_card")
            Me.columnpartner_state = MyBase.Columns("partner_state")
            Me.columnpartner_month = MyBase.Columns("partner_month")
            Me.columnpartner_obs = MyBase.Columns("partner_obs")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpartner_id = New Global.System.Data.DataColumn("partner_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_id)
            Me.columnpartner_name = New Global.System.Data.DataColumn("partner_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_name)
            Me.columnpartner_birthdate = New Global.System.Data.DataColumn("partner_birthdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_birthdate)
            Me.columnpartner_add_date = New Global.System.Data.DataColumn("partner_add_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_add_date)
            Me.columnpartner_gender = New Global.System.Data.DataColumn("partner_gender", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_gender)
            Me.columnpartner_cc = New Global.System.Data.DataColumn("partner_cc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_cc)
            Me.columnpartner_nif = New Global.System.Data.DataColumn("partner_nif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_nif)
            Me.columnpartner_address = New Global.System.Data.DataColumn("partner_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_address)
            Me.columnpartner_postal = New Global.System.Data.DataColumn("partner_postal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_postal)
            Me.columnpartner_city = New Global.System.Data.DataColumn("partner_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_city)
            Me.columnpartner_phone = New Global.System.Data.DataColumn("partner_phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_phone)
            Me.columnpartner_mobile = New Global.System.Data.DataColumn("partner_mobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_mobile)
            Me.columnpartner_email = New Global.System.Data.DataColumn("partner_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_email)
            Me.columnpartner_parent = New Global.System.Data.DataColumn("partner_parent", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_parent)
            Me.columnpartner_is_competition = New Global.System.Data.DataColumn("partner_is_competition", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_is_competition)
            Me.columnpartner_class = New Global.System.Data.DataColumn("partner_class", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_class)
            Me.columnpartner_image_id = New Global.System.Data.DataColumn("partner_image_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_image_id)
            Me.columnpartner_card = New Global.System.Data.DataColumn("partner_card", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_card)
            Me.columnpartner_state = New Global.System.Data.DataColumn("partner_state", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_state)
            Me.columnpartner_month = New Global.System.Data.DataColumn("partner_month", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_month)
            Me.columnpartner_obs = New Global.System.Data.DataColumn("partner_obs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_obs)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnpartner_id}, true))
            Me.columnpartner_id.AllowDBNull = false
            Me.columnpartner_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_partnerRow() As loo_partnerRow
            Return CType(Me.NewRow,loo_partnerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_partnerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_partnerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_partnerRowChangedEvent) Is Nothing) Then
                RaiseEvent loo_partnerRowChanged(Me, New loo_partnerRowChangeEvent(CType(e.Row,loo_partnerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_partnerRowChangingEvent) Is Nothing) Then
                RaiseEvent loo_partnerRowChanging(Me, New loo_partnerRowChangeEvent(CType(e.Row,loo_partnerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_partnerRowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_partnerRowDeleted(Me, New loo_partnerRowChangeEvent(CType(e.Row,loo_partnerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_partnerRowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_partnerRowDeleting(Me, New loo_partnerRowChangeEvent(CType(e.Row,loo_partnerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_partnerRow(ByVal row As loo_partnerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_partnerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_partner_classDataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_partner_classRow)
        
        Private columnclass_id As Global.System.Data.DataColumn
        
        Private columnclass_name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_partner_class"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property class_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclass_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property class_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclass_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_partner_classRow
            Get
                Return CType(Me.Rows(index),loo_partner_classRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_classRowChanging As loo_partner_classRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_classRowChanged As loo_partner_classRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_classRowDeleting As loo_partner_classRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_classRowDeleted As loo_partner_classRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_partner_classRow(ByVal row As loo_partner_classRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_partner_classRow(ByVal class_name As String) As loo_partner_classRow
            Dim rowloo_partner_classRow As loo_partner_classRow = CType(Me.NewRow,loo_partner_classRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, class_name}
            rowloo_partner_classRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_partner_classRow)
            Return rowloo_partner_classRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByclass_id(ByVal class_id As Integer) As loo_partner_classRow
            Return CType(Me.Rows.Find(New Object() {class_id}),loo_partner_classRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_partner_classDataTable = CType(MyBase.Clone,loo_partner_classDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_partner_classDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnclass_id = MyBase.Columns("class_id")
            Me.columnclass_name = MyBase.Columns("class_name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnclass_id = New Global.System.Data.DataColumn("class_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclass_id)
            Me.columnclass_name = New Global.System.Data.DataColumn("class_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclass_name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnclass_id}, true))
            Me.columnclass_id.AutoIncrement = true
            Me.columnclass_id.AutoIncrementSeed = -1
            Me.columnclass_id.AutoIncrementStep = -1
            Me.columnclass_id.AllowDBNull = false
            Me.columnclass_id.Unique = true
            Me.columnclass_name.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_partner_classRow() As loo_partner_classRow
            Return CType(Me.NewRow,loo_partner_classRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_partner_classRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_partner_classRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_partner_classRowChangedEvent) Is Nothing) Then
                RaiseEvent loo_partner_classRowChanged(Me, New loo_partner_classRowChangeEvent(CType(e.Row,loo_partner_classRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_partner_classRowChangingEvent) Is Nothing) Then
                RaiseEvent loo_partner_classRowChanging(Me, New loo_partner_classRowChangeEvent(CType(e.Row,loo_partner_classRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_partner_classRowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_partner_classRowDeleted(Me, New loo_partner_classRowChangeEvent(CType(e.Row,loo_partner_classRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_partner_classRowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_partner_classRowDeleting(Me, New loo_partner_classRowChangeEvent(CType(e.Row,loo_partner_classRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_partner_classRow(ByVal row As loo_partner_classRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_partner_classDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_partner_timetableDataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_partner_timetableRow)
        
        Private columntimetable_id As Global.System.Data.DataColumn
        
        Private columntimetable_day As Global.System.Data.DataColumn
        
        Private columntimetable_since_hour As Global.System.Data.DataColumn
        
        Private columntimetable_since_minutes As Global.System.Data.DataColumn
        
        Private columntimetable_to_hour As Global.System.Data.DataColumn
        
        Private columntimetable_to_minutes As Global.System.Data.DataColumn
        
        Private columntimetable_partner_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_partner_timetable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timetable_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimetable_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timetable_dayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimetable_day
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timetable_since_hourColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimetable_since_hour
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timetable_since_minutesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimetable_since_minutes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timetable_to_hourColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimetable_to_hour
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timetable_to_minutesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimetable_to_minutes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property timetable_partner_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntimetable_partner_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_partner_timetableRow
            Get
                Return CType(Me.Rows(index),loo_partner_timetableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_timetableRowChanging As loo_partner_timetableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_timetableRowChanged As loo_partner_timetableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_timetableRowDeleting As loo_partner_timetableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_timetableRowDeleted As loo_partner_timetableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_partner_timetableRow(ByVal row As loo_partner_timetableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_partner_timetableRow(ByVal timetable_day As Integer, ByVal timetable_since_hour As String, ByVal timetable_since_minutes As String, ByVal timetable_to_hour As String, ByVal timetable_to_minutes As String, ByVal parentloo_partnerRowByfk_partner_id As loo_partnerRow) As loo_partner_timetableRow
            Dim rowloo_partner_timetableRow As loo_partner_timetableRow = CType(Me.NewRow,loo_partner_timetableRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, timetable_day, timetable_since_hour, timetable_since_minutes, timetable_to_hour, timetable_to_minutes, Nothing}
            If (Not (parentloo_partnerRowByfk_partner_id) Is Nothing) Then
                columnValuesArray(6) = parentloo_partnerRowByfk_partner_id(0)
            End If
            rowloo_partner_timetableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_partner_timetableRow)
            Return rowloo_partner_timetableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBytimetable_id(ByVal timetable_id As Integer) As loo_partner_timetableRow
            Return CType(Me.Rows.Find(New Object() {timetable_id}),loo_partner_timetableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_partner_timetableDataTable = CType(MyBase.Clone,loo_partner_timetableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_partner_timetableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columntimetable_id = MyBase.Columns("timetable_id")
            Me.columntimetable_day = MyBase.Columns("timetable_day")
            Me.columntimetable_since_hour = MyBase.Columns("timetable_since_hour")
            Me.columntimetable_since_minutes = MyBase.Columns("timetable_since_minutes")
            Me.columntimetable_to_hour = MyBase.Columns("timetable_to_hour")
            Me.columntimetable_to_minutes = MyBase.Columns("timetable_to_minutes")
            Me.columntimetable_partner_id = MyBase.Columns("timetable_partner_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columntimetable_id = New Global.System.Data.DataColumn("timetable_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimetable_id)
            Me.columntimetable_day = New Global.System.Data.DataColumn("timetable_day", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimetable_day)
            Me.columntimetable_since_hour = New Global.System.Data.DataColumn("timetable_since_hour", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimetable_since_hour)
            Me.columntimetable_since_minutes = New Global.System.Data.DataColumn("timetable_since_minutes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimetable_since_minutes)
            Me.columntimetable_to_hour = New Global.System.Data.DataColumn("timetable_to_hour", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimetable_to_hour)
            Me.columntimetable_to_minutes = New Global.System.Data.DataColumn("timetable_to_minutes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimetable_to_minutes)
            Me.columntimetable_partner_id = New Global.System.Data.DataColumn("timetable_partner_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntimetable_partner_id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columntimetable_id}, true))
            Me.columntimetable_id.AutoIncrement = true
            Me.columntimetable_id.AutoIncrementSeed = -1
            Me.columntimetable_id.AutoIncrementStep = -1
            Me.columntimetable_id.AllowDBNull = false
            Me.columntimetable_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_partner_timetableRow() As loo_partner_timetableRow
            Return CType(Me.NewRow,loo_partner_timetableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_partner_timetableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_partner_timetableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_partner_timetableRowChangedEvent) Is Nothing) Then
                RaiseEvent loo_partner_timetableRowChanged(Me, New loo_partner_timetableRowChangeEvent(CType(e.Row,loo_partner_timetableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_partner_timetableRowChangingEvent) Is Nothing) Then
                RaiseEvent loo_partner_timetableRowChanging(Me, New loo_partner_timetableRowChangeEvent(CType(e.Row,loo_partner_timetableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_partner_timetableRowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_partner_timetableRowDeleted(Me, New loo_partner_timetableRowChangeEvent(CType(e.Row,loo_partner_timetableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_partner_timetableRowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_partner_timetableRowDeleting(Me, New loo_partner_timetableRowChangeEvent(CType(e.Row,loo_partner_timetableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_partner_timetableRow(ByVal row As loo_partner_timetableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_partner_timetableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_userDataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_userRow)
        
        Private columnuser_id As Global.System.Data.DataColumn
        
        Private columnuser_name As Global.System.Data.DataColumn
        
        Private columnuser_password As Global.System.Data.DataColumn
        
        Private columnuser_email As Global.System.Data.DataColumn
        
        Private columnuser_is_super As Global.System.Data.DataColumn
        
        Private columnuser_is_admin As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_user"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuser_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property user_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuser_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property user_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuser_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property user_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuser_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property user_is_superColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuser_is_super
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property user_is_adminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuser_is_admin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_userRow
            Get
                Return CType(Me.Rows(index),loo_userRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_userRowChanging As loo_userRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_userRowChanged As loo_userRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_userRowDeleting As loo_userRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_userRowDeleted As loo_userRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_userRow(ByVal row As loo_userRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_userRow(ByVal user_id As Integer, ByVal user_name As String, ByVal user_password As String, ByVal user_email As String, ByVal user_is_super As Boolean, ByVal user_is_admin As Boolean) As loo_userRow
            Dim rowloo_userRow As loo_userRow = CType(Me.NewRow,loo_userRow)
            Dim columnValuesArray() As Object = New Object() {user_id, user_name, user_password, user_email, user_is_super, user_is_admin}
            rowloo_userRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_userRow)
            Return rowloo_userRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByuser_id(ByVal user_id As Integer) As loo_userRow
            Return CType(Me.Rows.Find(New Object() {user_id}),loo_userRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_userDataTable = CType(MyBase.Clone,loo_userDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_userDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnuser_id = MyBase.Columns("user_id")
            Me.columnuser_name = MyBase.Columns("user_name")
            Me.columnuser_password = MyBase.Columns("user_password")
            Me.columnuser_email = MyBase.Columns("user_email")
            Me.columnuser_is_super = MyBase.Columns("user_is_super")
            Me.columnuser_is_admin = MyBase.Columns("user_is_admin")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnuser_id = New Global.System.Data.DataColumn("user_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuser_id)
            Me.columnuser_name = New Global.System.Data.DataColumn("user_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuser_name)
            Me.columnuser_password = New Global.System.Data.DataColumn("user_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuser_password)
            Me.columnuser_email = New Global.System.Data.DataColumn("user_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuser_email)
            Me.columnuser_is_super = New Global.System.Data.DataColumn("user_is_super", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuser_is_super)
            Me.columnuser_is_admin = New Global.System.Data.DataColumn("user_is_admin", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuser_is_admin)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnuser_id}, true))
            Me.columnuser_id.AllowDBNull = false
            Me.columnuser_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_userRow() As loo_userRow
            Return CType(Me.NewRow,loo_userRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_userRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_userRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_userRowChangedEvent) Is Nothing) Then
                RaiseEvent loo_userRowChanged(Me, New loo_userRowChangeEvent(CType(e.Row,loo_userRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_userRowChangingEvent) Is Nothing) Then
                RaiseEvent loo_userRowChanging(Me, New loo_userRowChangeEvent(CType(e.Row,loo_userRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_userRowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_userRowDeleted(Me, New loo_userRowChangeEvent(CType(e.Row,loo_userRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_userRowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_userRowDeleting(Me, New loo_userRowChangeEvent(CType(e.Row,loo_userRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_userRow(ByVal row As loo_userRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_userDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_sysDataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_sysRow)
        
        Private columnsys_period As Global.System.Data.DataColumn
        
        Private columnsys_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_sys"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sys_periodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsys_period
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sys_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsys_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_sysRow
            Get
                Return CType(Me.Rows(index),loo_sysRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_sysRowChanging As loo_sysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_sysRowChanged As loo_sysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_sysRowDeleting As loo_sysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_sysRowDeleted As loo_sysRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_sysRow(ByVal row As loo_sysRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_sysRow(ByVal sys_period As String) As loo_sysRow
            Dim rowloo_sysRow As loo_sysRow = CType(Me.NewRow,loo_sysRow)
            Dim columnValuesArray() As Object = New Object() {sys_period, Nothing}
            rowloo_sysRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_sysRow)
            Return rowloo_sysRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBysys_id(ByVal sys_id As Integer) As loo_sysRow
            Return CType(Me.Rows.Find(New Object() {sys_id}),loo_sysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_sysDataTable = CType(MyBase.Clone,loo_sysDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_sysDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnsys_period = MyBase.Columns("sys_period")
            Me.columnsys_id = MyBase.Columns("sys_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnsys_period = New Global.System.Data.DataColumn("sys_period", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsys_period)
            Me.columnsys_id = New Global.System.Data.DataColumn("sys_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsys_id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnsys_id}, true))
            Me.columnsys_period.AllowDBNull = false
            Me.columnsys_id.AutoIncrement = true
            Me.columnsys_id.AutoIncrementSeed = -1
            Me.columnsys_id.AutoIncrementStep = -1
            Me.columnsys_id.AllowDBNull = false
            Me.columnsys_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_sysRow() As loo_sysRow
            Return CType(Me.NewRow,loo_sysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_sysRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_sysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_sysRowChangedEvent) Is Nothing) Then
                RaiseEvent loo_sysRowChanged(Me, New loo_sysRowChangeEvent(CType(e.Row,loo_sysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_sysRowChangingEvent) Is Nothing) Then
                RaiseEvent loo_sysRowChanging(Me, New loo_sysRowChangeEvent(CType(e.Row,loo_sysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_sysRowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_sysRowDeleted(Me, New loo_sysRowChangeEvent(CType(e.Row,loo_sysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_sysRowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_sysRowDeleting(Me, New loo_sysRowChangeEvent(CType(e.Row,loo_sysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_sysRow(ByVal row As loo_sysRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_sysDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class partner_infoDataTable
        Inherits Global.System.Data.TypedTableBase(Of partner_infoRow)
        
        Private columnpartner_id As Global.System.Data.DataColumn
        
        Private columnpartner_name As Global.System.Data.DataColumn
        
        Private columnparent_name As Global.System.Data.DataColumn
        
        Private columnpartner_birthdate As Global.System.Data.DataColumn
        
        Private columnpartner_add_date As Global.System.Data.DataColumn
        
        Private columnpartner_gender As Global.System.Data.DataColumn
        
        Private columnpartner_cc As Global.System.Data.DataColumn
        
        Private columnpartner_nif As Global.System.Data.DataColumn
        
        Private columnpartner_address As Global.System.Data.DataColumn
        
        Private columnpartner_postal As Global.System.Data.DataColumn
        
        Private columnpartner_city As Global.System.Data.DataColumn
        
        Private columnpartner_phone As Global.System.Data.DataColumn
        
        Private columnpartner_mobile As Global.System.Data.DataColumn
        
        Private columnpartner_email As Global.System.Data.DataColumn
        
        Private columnimage As Global.System.Data.DataColumn
        
        Private columnimage_extension As Global.System.Data.DataColumn
        
        Private columnpartner_obs As Global.System.Data.DataColumn
        
        Private columnparent_nif As Global.System.Data.DataColumn
        
        Private columnparent_address As Global.System.Data.DataColumn
        
        Private columnparent_postal As Global.System.Data.DataColumn
        
        Private columnparent_city As Global.System.Data.DataColumn
        
        Private columnparent_phone As Global.System.Data.DataColumn
        
        Private columnparent_mobile As Global.System.Data.DataColumn
        
        Private columnparent_email As Global.System.Data.DataColumn
        
        Private columnmedic_card_number As Global.System.Data.DataColumn
        
        Private columnmedic_entity As Global.System.Data.DataColumn
        
        Private columnclass_name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "partner_info"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_birthdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_birthdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_add_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_add_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_ccColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_cc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_nifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_nif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_postalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_postal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_phoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_phone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_mobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_mobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property image_extensionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimage_extension
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_obsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_obs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_nifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_nif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_postalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_postal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_phoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_phone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_mobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_mobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property parent_emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparent_email
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property medic_card_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmedic_card_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property medic_entityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmedic_entity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property class_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclass_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As partner_infoRow
            Get
                Return CType(Me.Rows(index),partner_infoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event partner_infoRowChanging As partner_infoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event partner_infoRowChanged As partner_infoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event partner_infoRowDeleting As partner_infoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event partner_infoRowDeleted As partner_infoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addpartner_infoRow(ByVal row As partner_infoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addpartner_infoRow( _
                    ByVal partner_id As Integer,  _
                    ByVal partner_name As String,  _
                    ByVal parent_name As String,  _
                    ByVal partner_birthdate As Date,  _
                    ByVal partner_add_date As Date,  _
                    ByVal partner_gender As Integer,  _
                    ByVal partner_cc As String,  _
                    ByVal partner_nif As String,  _
                    ByVal partner_address As String,  _
                    ByVal partner_postal As String,  _
                    ByVal partner_city As String,  _
                    ByVal partner_phone As String,  _
                    ByVal partner_mobile As String,  _
                    ByVal partner_email As String,  _
                    ByVal image() As Byte,  _
                    ByVal image_extension As String,  _
                    ByVal partner_obs As String,  _
                    ByVal parent_nif As String,  _
                    ByVal parent_address As String,  _
                    ByVal parent_postal As String,  _
                    ByVal parent_city As String,  _
                    ByVal parent_phone As String,  _
                    ByVal parent_mobile As String,  _
                    ByVal parent_email As String,  _
                    ByVal medic_card_number As String,  _
                    ByVal medic_entity As String,  _
                    ByVal class_name As String) As partner_infoRow
            Dim rowpartner_infoRow As partner_infoRow = CType(Me.NewRow,partner_infoRow)
            Dim columnValuesArray() As Object = New Object() {partner_id, partner_name, parent_name, partner_birthdate, partner_add_date, partner_gender, partner_cc, partner_nif, partner_address, partner_postal, partner_city, partner_phone, partner_mobile, partner_email, image, image_extension, partner_obs, parent_nif, parent_address, parent_postal, parent_city, parent_phone, parent_mobile, parent_email, medic_card_number, medic_entity, class_name}
            rowpartner_infoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpartner_infoRow)
            Return rowpartner_infoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As partner_infoDataTable = CType(MyBase.Clone,partner_infoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New partner_infoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpartner_id = MyBase.Columns("partner_id")
            Me.columnpartner_name = MyBase.Columns("partner_name")
            Me.columnparent_name = MyBase.Columns("parent_name")
            Me.columnpartner_birthdate = MyBase.Columns("partner_birthdate")
            Me.columnpartner_add_date = MyBase.Columns("partner_add_date")
            Me.columnpartner_gender = MyBase.Columns("partner_gender")
            Me.columnpartner_cc = MyBase.Columns("partner_cc")
            Me.columnpartner_nif = MyBase.Columns("partner_nif")
            Me.columnpartner_address = MyBase.Columns("partner_address")
            Me.columnpartner_postal = MyBase.Columns("partner_postal")
            Me.columnpartner_city = MyBase.Columns("partner_city")
            Me.columnpartner_phone = MyBase.Columns("partner_phone")
            Me.columnpartner_mobile = MyBase.Columns("partner_mobile")
            Me.columnpartner_email = MyBase.Columns("partner_email")
            Me.columnimage = MyBase.Columns("image")
            Me.columnimage_extension = MyBase.Columns("image_extension")
            Me.columnpartner_obs = MyBase.Columns("partner_obs")
            Me.columnparent_nif = MyBase.Columns("parent_nif")
            Me.columnparent_address = MyBase.Columns("parent_address")
            Me.columnparent_postal = MyBase.Columns("parent_postal")
            Me.columnparent_city = MyBase.Columns("parent_city")
            Me.columnparent_phone = MyBase.Columns("parent_phone")
            Me.columnparent_mobile = MyBase.Columns("parent_mobile")
            Me.columnparent_email = MyBase.Columns("parent_email")
            Me.columnmedic_card_number = MyBase.Columns("medic_card_number")
            Me.columnmedic_entity = MyBase.Columns("medic_entity")
            Me.columnclass_name = MyBase.Columns("class_name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpartner_id = New Global.System.Data.DataColumn("partner_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_id)
            Me.columnpartner_name = New Global.System.Data.DataColumn("partner_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_name)
            Me.columnparent_name = New Global.System.Data.DataColumn("parent_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_name)
            Me.columnpartner_birthdate = New Global.System.Data.DataColumn("partner_birthdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_birthdate)
            Me.columnpartner_add_date = New Global.System.Data.DataColumn("partner_add_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_add_date)
            Me.columnpartner_gender = New Global.System.Data.DataColumn("partner_gender", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_gender)
            Me.columnpartner_cc = New Global.System.Data.DataColumn("partner_cc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_cc)
            Me.columnpartner_nif = New Global.System.Data.DataColumn("partner_nif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_nif)
            Me.columnpartner_address = New Global.System.Data.DataColumn("partner_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_address)
            Me.columnpartner_postal = New Global.System.Data.DataColumn("partner_postal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_postal)
            Me.columnpartner_city = New Global.System.Data.DataColumn("partner_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_city)
            Me.columnpartner_phone = New Global.System.Data.DataColumn("partner_phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_phone)
            Me.columnpartner_mobile = New Global.System.Data.DataColumn("partner_mobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_mobile)
            Me.columnpartner_email = New Global.System.Data.DataColumn("partner_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_email)
            Me.columnimage = New Global.System.Data.DataColumn("image", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage)
            Me.columnimage_extension = New Global.System.Data.DataColumn("image_extension", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimage_extension)
            Me.columnpartner_obs = New Global.System.Data.DataColumn("partner_obs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_obs)
            Me.columnparent_nif = New Global.System.Data.DataColumn("parent_nif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_nif)
            Me.columnparent_address = New Global.System.Data.DataColumn("parent_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_address)
            Me.columnparent_postal = New Global.System.Data.DataColumn("parent_postal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_postal)
            Me.columnparent_city = New Global.System.Data.DataColumn("parent_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_city)
            Me.columnparent_phone = New Global.System.Data.DataColumn("parent_phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_phone)
            Me.columnparent_mobile = New Global.System.Data.DataColumn("parent_mobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_mobile)
            Me.columnparent_email = New Global.System.Data.DataColumn("parent_email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparent_email)
            Me.columnmedic_card_number = New Global.System.Data.DataColumn("medic_card_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmedic_card_number)
            Me.columnmedic_entity = New Global.System.Data.DataColumn("medic_entity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmedic_entity)
            Me.columnclass_name = New Global.System.Data.DataColumn("class_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclass_name)
            Me.columnpartner_id.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newpartner_infoRow() As partner_infoRow
            Return CType(Me.NewRow,partner_infoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New partner_infoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(partner_infoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.partner_infoRowChangedEvent) Is Nothing) Then
                RaiseEvent partner_infoRowChanged(Me, New partner_infoRowChangeEvent(CType(e.Row,partner_infoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.partner_infoRowChangingEvent) Is Nothing) Then
                RaiseEvent partner_infoRowChanging(Me, New partner_infoRowChangeEvent(CType(e.Row,partner_infoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.partner_infoRowDeletedEvent) Is Nothing) Then
                RaiseEvent partner_infoRowDeleted(Me, New partner_infoRowChangeEvent(CType(e.Row,partner_infoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.partner_infoRowDeletingEvent) Is Nothing) Then
                RaiseEvent partner_infoRowDeleting(Me, New partner_infoRowChangeEvent(CType(e.Row,partner_infoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removepartner_infoRow(ByVal row As partner_infoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "partner_infoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_partner_class1DataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_partner_class1Row)
        
        Private columnpartner_id As Global.System.Data.DataColumn
        
        Private columnpartner_name As Global.System.Data.DataColumn
        
        Private columndia As Global.System.Data.DataColumn
        
        Private columndesde As Global.System.Data.DataColumn
        
        Private columnate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_partner_class1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property partner_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartner_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property diaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property desdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_partner_class1Row
            Get
                Return CType(Me.Rows(index),loo_partner_class1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_class1RowChanging As loo_partner_class1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_class1RowChanged As loo_partner_class1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_class1RowDeleting As loo_partner_class1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_class1RowDeleted As loo_partner_class1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_partner_class1Row(ByVal row As loo_partner_class1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_partner_class1Row(ByVal partner_id As Integer, ByVal partner_name As String, ByVal dia As String, ByVal desde As String, ByVal ate As String) As loo_partner_class1Row
            Dim rowloo_partner_class1Row As loo_partner_class1Row = CType(Me.NewRow,loo_partner_class1Row)
            Dim columnValuesArray() As Object = New Object() {partner_id, partner_name, dia, desde, ate}
            rowloo_partner_class1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_partner_class1Row)
            Return rowloo_partner_class1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_partner_class1DataTable = CType(MyBase.Clone,loo_partner_class1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_partner_class1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpartner_id = MyBase.Columns("partner_id")
            Me.columnpartner_name = MyBase.Columns("partner_name")
            Me.columndia = MyBase.Columns("dia")
            Me.columndesde = MyBase.Columns("desde")
            Me.columnate = MyBase.Columns("ate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpartner_id = New Global.System.Data.DataColumn("partner_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_id)
            Me.columnpartner_name = New Global.System.Data.DataColumn("partner_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartner_name)
            Me.columndia = New Global.System.Data.DataColumn("dia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndia)
            Me.columndesde = New Global.System.Data.DataColumn("desde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesde)
            Me.columnate = New Global.System.Data.DataColumn("ate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnate)
            Me.columnpartner_id.AllowDBNull = false
            Me.columndia.ReadOnly = true
            Me.columndesde.ReadOnly = true
            Me.columnate.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_partner_class1Row() As loo_partner_class1Row
            Return CType(Me.NewRow,loo_partner_class1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_partner_class1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_partner_class1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_partner_class1RowChangedEvent) Is Nothing) Then
                RaiseEvent loo_partner_class1RowChanged(Me, New loo_partner_class1RowChangeEvent(CType(e.Row,loo_partner_class1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_partner_class1RowChangingEvent) Is Nothing) Then
                RaiseEvent loo_partner_class1RowChanging(Me, New loo_partner_class1RowChangeEvent(CType(e.Row,loo_partner_class1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_partner_class1RowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_partner_class1RowDeleted(Me, New loo_partner_class1RowChangeEvent(CType(e.Row,loo_partner_class1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_partner_class1RowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_partner_class1RowDeleting(Me, New loo_partner_class1RowChangeEvent(CType(e.Row,loo_partner_class1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_partner_class1Row(ByVal row As loo_partner_class1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_partner_class1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class loo_partner_timetable1DataTable
        Inherits Global.System.Data.TypedTableBase(Of loo_partner_timetable1Row)
        
        Private columnd As Global.System.Data.DataColumn
        
        Private columndia As Global.System.Data.DataColumn
        
        Private columndesde As Global.System.Data.DataColumn
        
        Private columnate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "loo_partner_timetable1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property diaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property desdeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As loo_partner_timetable1Row
            Get
                Return CType(Me.Rows(index),loo_partner_timetable1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_timetable1RowChanging As loo_partner_timetable1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_timetable1RowChanged As loo_partner_timetable1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_timetable1RowDeleting As loo_partner_timetable1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event loo_partner_timetable1RowDeleted As loo_partner_timetable1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addloo_partner_timetable1Row(ByVal row As loo_partner_timetable1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addloo_partner_timetable1Row(ByVal d As Integer, ByVal dia As String, ByVal desde As String, ByVal ate As String) As loo_partner_timetable1Row
            Dim rowloo_partner_timetable1Row As loo_partner_timetable1Row = CType(Me.NewRow,loo_partner_timetable1Row)
            Dim columnValuesArray() As Object = New Object() {d, dia, desde, ate}
            rowloo_partner_timetable1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowloo_partner_timetable1Row)
            Return rowloo_partner_timetable1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As loo_partner_timetable1DataTable = CType(MyBase.Clone,loo_partner_timetable1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New loo_partner_timetable1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnd = MyBase.Columns("d")
            Me.columndia = MyBase.Columns("dia")
            Me.columndesde = MyBase.Columns("desde")
            Me.columnate = MyBase.Columns("ate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnd = New Global.System.Data.DataColumn("d", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnd)
            Me.columndia = New Global.System.Data.DataColumn("dia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndia)
            Me.columndesde = New Global.System.Data.DataColumn("desde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesde)
            Me.columnate = New Global.System.Data.DataColumn("ate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnate)
            Me.columndia.ReadOnly = true
            Me.columndesde.ReadOnly = true
            Me.columnate.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newloo_partner_timetable1Row() As loo_partner_timetable1Row
            Return CType(Me.NewRow,loo_partner_timetable1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New loo_partner_timetable1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(loo_partner_timetable1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.loo_partner_timetable1RowChangedEvent) Is Nothing) Then
                RaiseEvent loo_partner_timetable1RowChanged(Me, New loo_partner_timetable1RowChangeEvent(CType(e.Row,loo_partner_timetable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.loo_partner_timetable1RowChangingEvent) Is Nothing) Then
                RaiseEvent loo_partner_timetable1RowChanging(Me, New loo_partner_timetable1RowChangeEvent(CType(e.Row,loo_partner_timetable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.loo_partner_timetable1RowDeletedEvent) Is Nothing) Then
                RaiseEvent loo_partner_timetable1RowDeleted(Me, New loo_partner_timetable1RowChangeEvent(CType(e.Row,loo_partner_timetable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.loo_partner_timetable1RowDeletingEvent) Is Nothing) Then
                RaiseEvent loo_partner_timetable1RowDeleting(Me, New loo_partner_timetable1RowChangeEvent(CType(e.Row,loo_partner_timetable1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeloo_partner_timetable1Row(ByVal row As loo_partner_timetable1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ncc_2015DataSet = New ncc_2015DataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "loo_partner_timetable1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_imageRow
        Inherits Global.System.Data.DataRow
        
        Private tableloo_image As loo_imageDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_image = CType(Me.Table,loo_imageDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property image_id() As Integer
            Get
                Return CType(Me(Me.tableloo_image.image_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_image.image_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property image() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableloo_image.imageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image' in table 'loo_image' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_image.imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property image_extension() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_image.image_extensionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image_extension' in table 'loo_image' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_image.image_extensionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsimageNull() As Boolean
            Return Me.IsNull(Me.tableloo_image.imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetimageNull()
            Me(Me.tableloo_image.imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isimage_extensionNull() As Boolean
            Return Me.IsNull(Me.tableloo_image.image_extensionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setimage_extensionNull()
            Me(Me.tableloo_image.image_extensionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_medicRow
        Inherits Global.System.Data.DataRow
        
        Private tableloo_medic As loo_medicDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_medic = CType(Me.Table,loo_medicDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property medic_id() As Integer
            Get
                Return CType(Me(Me.tableloo_medic.medic_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_medic.medic_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property medic_card_number() As String
            Get
                Return CType(Me(Me.tableloo_medic.medic_card_numberColumn),String)
            End Get
            Set
                Me(Me.tableloo_medic.medic_card_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property medic_entity() As String
            Get
                Return CType(Me(Me.tableloo_medic.medic_entityColumn),String)
            End Get
            Set
                Me(Me.tableloo_medic.medic_entityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property medic_partner_id() As Integer
            Get
                Return CType(Me(Me.tableloo_medic.medic_partner_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_medic.medic_partner_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property loo_partnerRow() As loo_partnerRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FKpartner")),loo_partnerRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FKpartner"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_infoRow() As partner_infoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FKpartner1")),partner_infoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FKpartner1"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_partnerRow
        Inherits Global.System.Data.DataRow
        
        Private tableloo_partner As loo_partnerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_partner = CType(Me.Table,loo_partnerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_id() As Integer
            Get
                Return CType(Me(Me.tableloo_partner.partner_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_partner.partner_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_name' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_birthdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_birthdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_birthdate' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_birthdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_add_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_add_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_add_date' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_add_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_gender() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_genderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_gender' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_cc() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_ccColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_cc' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_ccColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_nif() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_nifColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_nif' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_nifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_address' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_postal() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_postalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_postal' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_postalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_city() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_city' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_phone() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_phoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_phone' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_phoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_mobile() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_mobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_mobile' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_mobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_email() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_email' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_parent() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_parentColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_parent' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_parentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_is_competition() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_is_competitionColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_is_competition' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_is_competitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_class() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_classColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_class' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_classColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_image_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_image_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_image_id' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_image_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_card() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_cardColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_card' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_cardColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_state() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_stateColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_state' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_month() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_monthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_month' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_monthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_obs() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner.partner_obsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_obs' in table 'loo_partner' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner.partner_obsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_nameNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_nameNull()
            Me(Me.tableloo_partner.partner_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_birthdateNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_birthdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_birthdateNull()
            Me(Me.tableloo_partner.partner_birthdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_add_dateNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_add_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_add_dateNull()
            Me(Me.tableloo_partner.partner_add_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_genderNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_genderNull()
            Me(Me.tableloo_partner.partner_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_ccNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_ccColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_ccNull()
            Me(Me.tableloo_partner.partner_ccColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_nifNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_nifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_nifNull()
            Me(Me.tableloo_partner.partner_nifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_addressNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_addressNull()
            Me(Me.tableloo_partner.partner_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_postalNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_postalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_postalNull()
            Me(Me.tableloo_partner.partner_postalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_cityNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_cityNull()
            Me(Me.tableloo_partner.partner_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_phoneNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_phoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_phoneNull()
            Me(Me.tableloo_partner.partner_phoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_mobileNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_mobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_mobileNull()
            Me(Me.tableloo_partner.partner_mobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_emailNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_emailNull()
            Me(Me.tableloo_partner.partner_emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_parentNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_parentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_parentNull()
            Me(Me.tableloo_partner.partner_parentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_is_competitionNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_is_competitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_is_competitionNull()
            Me(Me.tableloo_partner.partner_is_competitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_classNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_classColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_classNull()
            Me(Me.tableloo_partner.partner_classColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_image_idNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_image_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_image_idNull()
            Me(Me.tableloo_partner.partner_image_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_cardNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_cardColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_cardNull()
            Me(Me.tableloo_partner.partner_cardColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_stateNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_stateNull()
            Me(Me.tableloo_partner.partner_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_monthNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_monthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_monthNull()
            Me(Me.tableloo_partner.partner_monthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_obsNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner.partner_obsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_obsNull()
            Me(Me.tableloo_partner.partner_obsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getloo_medicRows() As loo_medicRow()
            If (Me.Table.ChildRelations("FKpartner") Is Nothing) Then
                Return New loo_medicRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FKpartner")),loo_medicRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getloo_partner_timetableRows() As loo_partner_timetableRow()
            If (Me.Table.ChildRelations("fk_partner_id") Is Nothing) Then
                Return New loo_partner_timetableRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_partner_id")),loo_partner_timetableRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_partner_classRow
        Inherits Global.System.Data.DataRow
        
        Private tableloo_partner_class As loo_partner_classDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_partner_class = CType(Me.Table,loo_partner_classDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property class_id() As Integer
            Get
                Return CType(Me(Me.tableloo_partner_class.class_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_partner_class.class_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property class_name() As String
            Get
                Return CType(Me(Me.tableloo_partner_class.class_nameColumn),String)
            End Get
            Set
                Me(Me.tableloo_partner_class.class_nameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_partner_timetableRow
        Inherits Global.System.Data.DataRow
        
        Private tableloo_partner_timetable As loo_partner_timetableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_partner_timetable = CType(Me.Table,loo_partner_timetableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property timetable_id() As Integer
            Get
                Return CType(Me(Me.tableloo_partner_timetable.timetable_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_partner_timetable.timetable_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property timetable_day() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable.timetable_dayColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'timetable_day' in table 'loo_partner_timetable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable.timetable_dayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property timetable_since_hour() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable.timetable_since_hourColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'timetable_since_hour' in table 'loo_partner_timetable' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable.timetable_since_hourColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property timetable_since_minutes() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable.timetable_since_minutesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'timetable_since_minutes' in table 'loo_partner_timetable' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable.timetable_since_minutesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property timetable_to_hour() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable.timetable_to_hourColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'timetable_to_hour' in table 'loo_partner_timetable' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable.timetable_to_hourColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property timetable_to_minutes() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable.timetable_to_minutesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'timetable_to_minutes' in table 'loo_partner_timetable' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable.timetable_to_minutesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property timetable_partner_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable.timetable_partner_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'timetable_partner_id' in table 'loo_partner_timetable' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable.timetable_partner_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property loo_partnerRow() As loo_partnerRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_partner_id")),loo_partnerRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_partner_id"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_infoRow() As partner_infoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("fk_partner_id1")),partner_infoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("fk_partner_id1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istimetable_dayNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable.timetable_dayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settimetable_dayNull()
            Me(Me.tableloo_partner_timetable.timetable_dayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istimetable_since_hourNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable.timetable_since_hourColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settimetable_since_hourNull()
            Me(Me.tableloo_partner_timetable.timetable_since_hourColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istimetable_since_minutesNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable.timetable_since_minutesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settimetable_since_minutesNull()
            Me(Me.tableloo_partner_timetable.timetable_since_minutesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istimetable_to_hourNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable.timetable_to_hourColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settimetable_to_hourNull()
            Me(Me.tableloo_partner_timetable.timetable_to_hourColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istimetable_to_minutesNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable.timetable_to_minutesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settimetable_to_minutesNull()
            Me(Me.tableloo_partner_timetable.timetable_to_minutesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istimetable_partner_idNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable.timetable_partner_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settimetable_partner_idNull()
            Me(Me.tableloo_partner_timetable.timetable_partner_idColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_userRow
        Inherits Global.System.Data.DataRow
        
        Private tableloo_user As loo_userDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_user = CType(Me.Table,loo_userDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property user_id() As Integer
            Get
                Return CType(Me(Me.tableloo_user.user_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_user.user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property user_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_user.user_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'user_name' in table 'loo_user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_user.user_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property user_password() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_user.user_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'user_password' in table 'loo_user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_user.user_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property user_email() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_user.user_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'user_email' in table 'loo_user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_user.user_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property user_is_super() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableloo_user.user_is_superColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'user_is_super' in table 'loo_user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_user.user_is_superColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property user_is_admin() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableloo_user.user_is_adminColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'user_is_admin' in table 'loo_user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_user.user_is_adminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isuser_nameNull() As Boolean
            Return Me.IsNull(Me.tableloo_user.user_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setuser_nameNull()
            Me(Me.tableloo_user.user_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isuser_passwordNull() As Boolean
            Return Me.IsNull(Me.tableloo_user.user_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setuser_passwordNull()
            Me(Me.tableloo_user.user_passwordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isuser_emailNull() As Boolean
            Return Me.IsNull(Me.tableloo_user.user_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setuser_emailNull()
            Me(Me.tableloo_user.user_emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isuser_is_superNull() As Boolean
            Return Me.IsNull(Me.tableloo_user.user_is_superColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setuser_is_superNull()
            Me(Me.tableloo_user.user_is_superColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isuser_is_adminNull() As Boolean
            Return Me.IsNull(Me.tableloo_user.user_is_adminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setuser_is_adminNull()
            Me(Me.tableloo_user.user_is_adminColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_sysRow
        Inherits Global.System.Data.DataRow
        
        Private tableloo_sys As loo_sysDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_sys = CType(Me.Table,loo_sysDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sys_period() As String
            Get
                Return CType(Me(Me.tableloo_sys.sys_periodColumn),String)
            End Get
            Set
                Me(Me.tableloo_sys.sys_periodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sys_id() As Integer
            Get
                Return CType(Me(Me.tableloo_sys.sys_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_sys.sys_idColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class partner_infoRow
        Inherits Global.System.Data.DataRow
        
        Private tablepartner_info As partner_infoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepartner_info = CType(Me.Table,partner_infoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_id() As Integer
            Get
                Return CType(Me(Me.tablepartner_info.partner_idColumn),Integer)
            End Get
            Set
                Me(Me.tablepartner_info.partner_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_name' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.parent_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'parent_name' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.parent_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_birthdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_birthdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_birthdate' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_birthdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_add_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_add_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_add_date' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_add_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_gender() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_genderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_gender' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_cc() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_ccColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_cc' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_ccColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_nif() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_nifColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_nif' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_nifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_address' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_postal() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_postalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_postal' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_postalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_city() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_city' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_phone() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_phoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_phone' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_phoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_mobile() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_mobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_mobile' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_mobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_email() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_email' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property image() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.imageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property image_extension() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.image_extensionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'image_extension' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.image_extensionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_obs() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.partner_obsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_obs' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.partner_obsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_nif() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.parent_nifColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'parent_nif' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.parent_nifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.parent_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'parent_address' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.parent_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_postal() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.parent_postalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'parent_postal' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.parent_postalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_city() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.parent_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'parent_city' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.parent_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_phone() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.parent_phoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'parent_phone' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.parent_phoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_mobile() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.parent_mobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'parent_mobile' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.parent_mobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property parent_email() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.parent_emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'parent_email' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.parent_emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property medic_card_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.medic_card_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'medic_card_number' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.medic_card_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property medic_entity() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.medic_entityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'medic_entity' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.medic_entityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property class_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablepartner_info.class_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'class_name' in table 'partner_info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepartner_info.class_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_nameNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_nameNull()
            Me(Me.tablepartner_info.partner_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_nameNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.parent_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_nameNull()
            Me(Me.tablepartner_info.parent_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_birthdateNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_birthdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_birthdateNull()
            Me(Me.tablepartner_info.partner_birthdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_add_dateNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_add_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_add_dateNull()
            Me(Me.tablepartner_info.partner_add_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_genderNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_genderNull()
            Me(Me.tablepartner_info.partner_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_ccNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_ccColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_ccNull()
            Me(Me.tablepartner_info.partner_ccColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_nifNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_nifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_nifNull()
            Me(Me.tablepartner_info.partner_nifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_addressNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_addressNull()
            Me(Me.tablepartner_info.partner_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_postalNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_postalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_postalNull()
            Me(Me.tablepartner_info.partner_postalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_cityNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_cityNull()
            Me(Me.tablepartner_info.partner_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_phoneNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_phoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_phoneNull()
            Me(Me.tablepartner_info.partner_phoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_mobileNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_mobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_mobileNull()
            Me(Me.tablepartner_info.partner_mobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_emailNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_emailNull()
            Me(Me.tablepartner_info.partner_emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsimageNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetimageNull()
            Me(Me.tablepartner_info.imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isimage_extensionNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.image_extensionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setimage_extensionNull()
            Me(Me.tablepartner_info.image_extensionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_obsNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.partner_obsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_obsNull()
            Me(Me.tablepartner_info.partner_obsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_nifNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.parent_nifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_nifNull()
            Me(Me.tablepartner_info.parent_nifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_addressNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.parent_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_addressNull()
            Me(Me.tablepartner_info.parent_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_postalNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.parent_postalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_postalNull()
            Me(Me.tablepartner_info.parent_postalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_cityNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.parent_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_cityNull()
            Me(Me.tablepartner_info.parent_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_phoneNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.parent_phoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_phoneNull()
            Me(Me.tablepartner_info.parent_phoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_mobileNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.parent_mobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_mobileNull()
            Me(Me.tablepartner_info.parent_mobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparent_emailNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.parent_emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparent_emailNull()
            Me(Me.tablepartner_info.parent_emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismedic_card_numberNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.medic_card_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmedic_card_numberNull()
            Me(Me.tablepartner_info.medic_card_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismedic_entityNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.medic_entityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmedic_entityNull()
            Me(Me.tablepartner_info.medic_entityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isclass_nameNull() As Boolean
            Return Me.IsNull(Me.tablepartner_info.class_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setclass_nameNull()
            Me(Me.tablepartner_info.class_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getloo_medicRows() As loo_medicRow()
            If (Me.Table.ChildRelations("FKpartner1") Is Nothing) Then
                Return New loo_medicRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FKpartner1")),loo_medicRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Getloo_partner_timetableRows() As loo_partner_timetableRow()
            If (Me.Table.ChildRelations("fk_partner_id1") Is Nothing) Then
                Return New loo_partner_timetableRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("fk_partner_id1")),loo_partner_timetableRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_partner_class1Row
        Inherits Global.System.Data.DataRow
        
        Private tableloo_partner_class1 As loo_partner_class1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_partner_class1 = CType(Me.Table,loo_partner_class1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_id() As Integer
            Get
                Return CType(Me(Me.tableloo_partner_class1.partner_idColumn),Integer)
            End Get
            Set
                Me(Me.tableloo_partner_class1.partner_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property partner_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_class1.partner_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'partner_name' in table 'loo_partner_class1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_class1.partner_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dia() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_class1.diaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dia' in table 'loo_partner_class1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_class1.diaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property desde() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_class1.desdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desde' in table 'loo_partner_class1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_class1.desdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ate() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_class1.ateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ate' in table 'loo_partner_class1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_class1.ateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispartner_nameNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_class1.partner_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpartner_nameNull()
            Me(Me.tableloo_partner_class1.partner_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdiaNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_class1.diaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdiaNull()
            Me(Me.tableloo_partner_class1.diaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdesdeNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_class1.desdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdesdeNull()
            Me(Me.tableloo_partner_class1.desdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsateNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_class1.ateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetateNull()
            Me(Me.tableloo_partner_class1.ateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class loo_partner_timetable1Row
        Inherits Global.System.Data.DataRow
        
        Private tableloo_partner_timetable1 As loo_partner_timetable1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableloo_partner_timetable1 = CType(Me.Table,loo_partner_timetable1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property d() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable1.dColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'd' in table 'loo_partner_timetable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable1.dColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dia() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable1.diaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dia' in table 'loo_partner_timetable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable1.diaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property desde() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable1.desdeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desde' in table 'loo_partner_timetable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable1.desdeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ate() As String
            Get
                Try 
                    Return CType(Me(Me.tableloo_partner_timetable1.ateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ate' in table 'loo_partner_timetable1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableloo_partner_timetable1.ateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable1.dColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdNull()
            Me(Me.tableloo_partner_timetable1.dColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdiaNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable1.diaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdiaNull()
            Me(Me.tableloo_partner_timetable1.diaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdesdeNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable1.desdeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdesdeNull()
            Me(Me.tableloo_partner_timetable1.desdeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsateNull() As Boolean
            Return Me.IsNull(Me.tableloo_partner_timetable1.ateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetateNull()
            Me(Me.tableloo_partner_timetable1.ateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_imageRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_imageRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_imageRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_imageRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_medicRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_medicRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_medicRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_medicRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_partnerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_partnerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_partnerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_partnerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_partner_classRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_partner_classRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_partner_classRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_partner_classRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_partner_timetableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_partner_timetableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_partner_timetableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_partner_timetableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_userRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_userRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_userRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_userRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_sysRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_sysRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_sysRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_sysRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class partner_infoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As partner_infoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As partner_infoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As partner_infoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_partner_class1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_partner_class1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_partner_class1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_partner_class1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class loo_partner_timetable1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As loo_partner_timetable1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As loo_partner_timetable1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As loo_partner_timetable1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ncc_2015DataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_imageTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_image"
            tableMapping.ColumnMappings.Add("image_id", "image_id")
            tableMapping.ColumnMappings.Add("image", "image")
            tableMapping.ColumnMappings.Add("image_extension", "image_extension")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `ncc_2015`.`loo_image` WHERE ((`image_id` = :Original_image_id) AND ("& _ 
                "(:IsNull_image_extension = 1 AND `image_extension` IS NULL) OR (`image_extension"& _ 
                "` = :Original_image_extension)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_image_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "image_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_image_extension"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "image_extension"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_image_extension"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "image_extension"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `ncc_2015`.`loo_image` (`image`, `image_extension`) VALUES (:image, :"& _ 
                "image_extension)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "image"
            param.DbType = Global.System.Data.DbType.Binary
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Blob
            param.IsNullable = true
            param.SourceColumn = "image"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "image_extension"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "image_extension"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `ncc_2015`.`loo_image` SET `image` = :image, `image_extension` = :image_ex"& _ 
                "tension WHERE ((`image_id` = :Original_image_id) AND ((:IsNull_image_extension ="& _ 
                " 1 AND `image_extension` IS NULL) OR (`image_extension` = :Original_image_extens"& _ 
                "ion)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "image"
            param.DbType = Global.System.Data.DbType.Binary
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Blob
            param.IsNullable = true
            param.SourceColumn = "image"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "image_extension"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "image_extension"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_image_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "image_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_image_extension"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "image_extension"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_image_extension"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "image_extension"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT image_id, image, image_extension FROM ncc_2015.loo_image"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_imageDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ncc_2015DataSet.loo_imageDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ncc_2015DataSet.loo_imageDataTable = New ncc_2015DataSet.loo_imageDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ncc_2015DataSet.loo_imageDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ncc_2015DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "loo_image")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_image_id As Integer, ByVal Original_image_extension As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_image_id,Integer)
            If (Original_image_extension Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_image_extension,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal image() As Byte, ByVal image_extension As String) As Integer
            If (image Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(image,Byte())
            End If
            If (image_extension Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(image_extension,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal image() As Byte, ByVal image_extension As String, ByVal Original_image_id As Integer, ByVal Original_image_extension As String) As Integer
            If (image Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(image,Byte())
            End If
            If (image_extension Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(image_extension,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_image_id,Integer)
            If (Original_image_extension Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_image_extension,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_medicTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_medic"
            tableMapping.ColumnMappings.Add("medic_id", "medic_id")
            tableMapping.ColumnMappings.Add("medic_card_number", "medic_card_number")
            tableMapping.ColumnMappings.Add("medic_entity", "medic_entity")
            tableMapping.ColumnMappings.Add("medic_partner_id", "medic_partner_id")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `ncc_2015`.`loo_medic` (`medic_id`, `medic_card_number`, `medic_entit"& _ 
                "y`, `medic_partner_id`) VALUES (:medic_id, :medic_card_number, :medic_entity, :m"& _ 
                "edic_partner_id)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "medic_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "medic_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "medic_card_number"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "medic_card_number"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "medic_entity"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "medic_entity"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "medic_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "medic_partner_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT medic_id, medic_card_number, medic_entity, medic_partner_id FROM ncc_2015."& _ 
                "loo_medic"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_medicDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ncc_2015DataSet.loo_medicDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ncc_2015DataSet.loo_medicDataTable = New ncc_2015DataSet.loo_medicDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ncc_2015DataSet.loo_medicDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ncc_2015DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "loo_medic")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal medic_id As Integer, ByVal medic_card_number As String, ByVal medic_entity As String, ByVal medic_partner_id As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(medic_id,Integer)
            If (medic_card_number Is Nothing) Then
                Throw New Global.System.ArgumentNullException("medic_card_number")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(medic_card_number,String)
            End If
            If (medic_entity Is Nothing) Then
                Throw New Global.System.ArgumentNullException("medic_entity")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(medic_entity,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(medic_partner_id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_partnerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_partner"
            tableMapping.ColumnMappings.Add("partner_id", "partner_id")
            tableMapping.ColumnMappings.Add("partner_name", "partner_name")
            tableMapping.ColumnMappings.Add("partner_birthdate", "partner_birthdate")
            tableMapping.ColumnMappings.Add("partner_add_date", "partner_add_date")
            tableMapping.ColumnMappings.Add("partner_gender", "partner_gender")
            tableMapping.ColumnMappings.Add("partner_cc", "partner_cc")
            tableMapping.ColumnMappings.Add("partner_nif", "partner_nif")
            tableMapping.ColumnMappings.Add("partner_address", "partner_address")
            tableMapping.ColumnMappings.Add("partner_postal", "partner_postal")
            tableMapping.ColumnMappings.Add("partner_city", "partner_city")
            tableMapping.ColumnMappings.Add("partner_phone", "partner_phone")
            tableMapping.ColumnMappings.Add("partner_mobile", "partner_mobile")
            tableMapping.ColumnMappings.Add("partner_email", "partner_email")
            tableMapping.ColumnMappings.Add("partner_parent", "partner_parent")
            tableMapping.ColumnMappings.Add("partner_is_competition", "partner_is_competition")
            tableMapping.ColumnMappings.Add("partner_class", "partner_class")
            tableMapping.ColumnMappings.Add("partner_image_id", "partner_image_id")
            tableMapping.ColumnMappings.Add("partner_card", "partner_card")
            tableMapping.ColumnMappings.Add("partner_state", "partner_state")
            tableMapping.ColumnMappings.Add("partner_month", "partner_month")
            tableMapping.ColumnMappings.Add("partner_obs", "partner_obs")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `ncc_2015`.`loo_partner` WHERE ((`partner_id` = :Original_partner_id)"& _ 
                " AND ((:IsNull_partner_name = 1 AND `partner_name` IS NULL) OR (`partner_name` ="& _ 
                " :Original_partner_name)) AND ((:IsNull_partner_birthdate = 1 AND `partner_birth"& _ 
                "date` IS NULL) OR (`partner_birthdate` = :Original_partner_birthdate)) AND ((:Is"& _ 
                "Null_partner_add_date = 1 AND `partner_add_date` IS NULL) OR (`partner_add_date`"& _ 
                " = :Original_partner_add_date)) AND ((:IsNull_partner_gender = 1 AND `partner_ge"& _ 
                "nder` IS NULL) OR (`partner_gender` = :Original_partner_gender)) AND ((:IsNull_p"& _ 
                "artner_cc = 1 AND `partner_cc` IS NULL) OR (`partner_cc` = :Original_partner_cc)"& _ 
                ") AND ((:IsNull_partner_nif = 1 AND `partner_nif` IS NULL) OR (`partner_nif` = :"& _ 
                "Original_partner_nif)) AND ((:IsNull_partner_address = 1 AND `partner_address` I"& _ 
                "S NULL) OR (`partner_address` = :Original_partner_address)) AND ((:IsNull_partne"& _ 
                "r_postal = 1 AND `partner_postal` IS NULL) OR (`partner_postal` = :Original_part"& _ 
                "ner_postal)) AND ((:IsNull_partner_city = 1 AND `partner_city` IS NULL) OR (`par"& _ 
                "tner_city` = :Original_partner_city)) AND ((:IsNull_partner_phone = 1 AND `partn"& _ 
                "er_phone` IS NULL) OR (`partner_phone` = :Original_partner_phone)) AND ((:IsNull"& _ 
                "_partner_mobile = 1 AND `partner_mobile` IS NULL) OR (`partner_mobile` = :Origin"& _ 
                "al_partner_mobile)) AND ((:IsNull_partner_email = 1 AND `partner_email` IS NULL)"& _ 
                " OR (`partner_email` = :Original_partner_email)) AND ((:IsNull_partner_parent = "& _ 
                "1 AND `partner_parent` IS NULL) OR (`partner_parent` = :Original_partner_parent)"& _ 
                ") AND ((:IsNull_partner_is_competition = 1 AND `partner_is_competition` IS NULL)"& _ 
                " OR (`partner_is_competition` = :Original_partner_is_competition)) AND ((:IsNull"& _ 
                "_partner_class = 1 AND `partner_class` IS NULL) OR (`partner_class` = :Original_"& _ 
                "partner_class)) AND ((:IsNull_partner_image_id = 1 AND `partner_image_id` IS NUL"& _ 
                "L) OR (`partner_image_id` = :Original_partner_image_id)) AND ((:IsNull_partner_c"& _ 
                "ard = 1 AND `partner_card` IS NULL) OR (`partner_card` = :Original_partner_card)"& _ 
                ") AND ((:IsNull_partner_state = 1 AND `partner_state` IS NULL) OR (`partner_stat"& _ 
                "e` = :Original_partner_state)) AND ((:IsNull_partner_month = 1 AND `partner_mont"& _ 
                "h` IS NULL) OR (`partner_month` = :Original_partner_month)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_name"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_birthdate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_birthdate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_birthdate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.[Date]
            param.IsNullable = true
            param.SourceColumn = "partner_birthdate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_add_date"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_add_date"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_add_date"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.TimeStamp
            param.IsNullable = true
            param.SourceColumn = "partner_add_date"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_gender"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_gender"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_gender"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_gender"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_cc"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_cc"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_nif"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_nif"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_nif"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_nif"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_address"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_address"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_address"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_address"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_postal"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_postal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_postal"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_postal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_city"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_city"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_city"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_city"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_phone"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_phone"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_phone"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_phone"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_mobile"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_mobile"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_mobile"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_mobile"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_email"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_email"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_email"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_email"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_parent"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_parent"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_parent"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_parent"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_is_competition"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_is_competition"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_is_competition"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "partner_is_competition"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_class"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_class"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_class"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_class"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_image_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_image_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_image_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_image_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_card"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_card"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_card"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_card"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_state"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_state"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_state"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "partner_state"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_month"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_month"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_month"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_month"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `ncc_2015`.`loo_partner` (`partner_id`, `partner_name`, `partner_birt"& _ 
                "hdate`, `partner_add_date`, `partner_gender`, `partner_cc`, `partner_nif`, `part"& _ 
                "ner_address`, `partner_postal`, `partner_city`, `partner_phone`, `partner_mobile"& _ 
                "`, `partner_email`, `partner_parent`, `partner_is_competition`, `partner_class`,"& _ 
                " `partner_image_id`, `partner_card`, `partner_state`, `partner_month`, `partner_"& _ 
                "obs`) VALUES (:partner_id, :partner_name, :partner_birthdate, :partner_add_date,"& _ 
                " :partner_gender, :partner_cc, :partner_nif, :partner_address, :partner_postal, "& _ 
                ":partner_city, :partner_phone, :partner_mobile, :partner_email, :partner_parent,"& _ 
                " :partner_is_competition, :partner_class, :partner_image_id, :partner_card, :par"& _ 
                "tner_state, :partner_month, :partner_obs)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_name"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_birthdate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.[Date]
            param.IsNullable = true
            param.SourceColumn = "partner_birthdate"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_add_date"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.TimeStamp
            param.IsNullable = true
            param.SourceColumn = "partner_add_date"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_gender"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_gender"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_cc"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_cc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_nif"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_nif"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_address"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_address"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_postal"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_postal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_city"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_city"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_phone"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_phone"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_mobile"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_mobile"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_email"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_email"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_parent"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_parent"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_is_competition"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "partner_is_competition"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_class"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_class"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_image_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_image_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_card"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_card"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_state"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "partner_state"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_month"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_month"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_obs"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Text
            param.IsNullable = true
            param.SourceColumn = "partner_obs"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `ncc_2015`.`loo_partner` SET `partner_id` = :partner_id, `partner_name` = "& _ 
                ":partner_name, `partner_birthdate` = :partner_birthdate, `partner_add_date` = :p"& _ 
                "artner_add_date, `partner_gender` = :partner_gender, `partner_cc` = :partner_cc,"& _ 
                " `partner_nif` = :partner_nif, `partner_address` = :partner_address, `partner_po"& _ 
                "stal` = :partner_postal, `partner_city` = :partner_city, `partner_phone` = :part"& _ 
                "ner_phone, `partner_mobile` = :partner_mobile, `partner_email` = :partner_email,"& _ 
                " `partner_parent` = :partner_parent, `partner_is_competition` = :partner_is_comp"& _ 
                "etition, `partner_class` = :partner_class, `partner_image_id` = :partner_image_i"& _ 
                "d, `partner_card` = :partner_card, `partner_state` = :partner_state, `partner_mo"& _ 
                "nth` = :partner_month, `partner_obs` = :partner_obs WHERE ((`partner_id` = :Orig"& _ 
                "inal_partner_id) AND ((:IsNull_partner_name = 1 AND `partner_name` IS NULL) OR ("& _ 
                "`partner_name` = :Original_partner_name)) AND ((:IsNull_partner_birthdate = 1 AN"& _ 
                "D `partner_birthdate` IS NULL) OR (`partner_birthdate` = :Original_partner_birth"& _ 
                "date)) AND ((:IsNull_partner_add_date = 1 AND `partner_add_date` IS NULL) OR (`p"& _ 
                "artner_add_date` = :Original_partner_add_date)) AND ((:IsNull_partner_gender = 1"& _ 
                " AND `partner_gender` IS NULL) OR (`partner_gender` = :Original_partner_gender))"& _ 
                " AND ((:IsNull_partner_cc = 1 AND `partner_cc` IS NULL) OR (`partner_cc` = :Orig"& _ 
                "inal_partner_cc)) AND ((:IsNull_partner_nif = 1 AND `partner_nif` IS NULL) OR (`"& _ 
                "partner_nif` = :Original_partner_nif)) AND ((:IsNull_partner_address = 1 AND `pa"& _ 
                "rtner_address` IS NULL) OR (`partner_address` = :Original_partner_address)) AND "& _ 
                "((:IsNull_partner_postal = 1 AND `partner_postal` IS NULL) OR (`partner_postal` "& _ 
                "= :Original_partner_postal)) AND ((:IsNull_partner_city = 1 AND `partner_city` I"& _ 
                "S NULL) OR (`partner_city` = :Original_partner_city)) AND ((:IsNull_partner_phon"& _ 
                "e = 1 AND `partner_phone` IS NULL) OR (`partner_phone` = :Original_partner_phone"& _ 
                ")) AND ((:IsNull_partner_mobile = 1 AND `partner_mobile` IS NULL) OR (`partner_m"& _ 
                "obile` = :Original_partner_mobile)) AND ((:IsNull_partner_email = 1 AND `partner"& _ 
                "_email` IS NULL) OR (`partner_email` = :Original_partner_email)) AND ((:IsNull_p"& _ 
                "artner_parent = 1 AND `partner_parent` IS NULL) OR (`partner_parent` = :Original"& _ 
                "_partner_parent)) AND ((:IsNull_partner_is_competition = 1 AND `partner_is_compe"& _ 
                "tition` IS NULL) OR (`partner_is_competition` = :Original_partner_is_competition"& _ 
                ")) AND ((:IsNull_partner_class = 1 AND `partner_class` IS NULL) OR (`partner_cla"& _ 
                "ss` = :Original_partner_class)) AND ((:IsNull_partner_image_id = 1 AND `partner_"& _ 
                "image_id` IS NULL) OR (`partner_image_id` = :Original_partner_image_id)) AND ((:"& _ 
                "IsNull_partner_card = 1 AND `partner_card` IS NULL) OR (`partner_card` = :Origin"& _ 
                "al_partner_card)) AND ((:IsNull_partner_state = 1 AND `partner_state` IS NULL) O"& _ 
                "R (`partner_state` = :Original_partner_state)) AND ((:IsNull_partner_month = 1 A"& _ 
                "ND `partner_month` IS NULL) OR (`partner_month` = :Original_partner_month)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_id"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_name"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_birthdate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.[Date]
            param.IsNullable = true
            param.SourceColumn = "partner_birthdate"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_add_date"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.TimeStamp
            param.IsNullable = true
            param.SourceColumn = "partner_add_date"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_gender"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_gender"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_cc"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_cc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_nif"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_nif"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_address"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_address"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_postal"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_postal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_city"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_city"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_phone"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_phone"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_mobile"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_mobile"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_email"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_email"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_parent"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_parent"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_is_competition"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "partner_is_competition"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_class"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_class"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_image_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_image_id"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_card"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_card"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_state"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "partner_state"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_month"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_month"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_obs"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Text
            param.IsNullable = true
            param.SourceColumn = "partner_obs"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_name"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_birthdate"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_birthdate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_birthdate"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.[Date]
            param.IsNullable = true
            param.SourceColumn = "partner_birthdate"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_add_date"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_add_date"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_add_date"
            param.DbType = Global.System.Data.DbType.DateTime
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.TimeStamp
            param.IsNullable = true
            param.SourceColumn = "partner_add_date"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_gender"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_gender"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_gender"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_gender"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_cc"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_cc"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_nif"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_nif"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_nif"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_nif"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_address"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_address"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_address"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_address"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_postal"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_postal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_postal"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_postal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_city"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_city"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_city"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_city"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_phone"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_phone"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_phone"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_phone"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_mobile"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_mobile"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_mobile"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_mobile"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_email"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_email"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_email"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_email"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_parent"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_parent"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_parent"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_parent"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_is_competition"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_is_competition"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_is_competition"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "partner_is_competition"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_class"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_class"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_class"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_class"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_image_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_image_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_image_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_image_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_card"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_card"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_card"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "partner_card"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_state"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_state"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_state"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "partner_state"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_partner_month"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_month"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_partner_month"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_month"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT partner_id, partner_name, partner_birthdate, partner_add_date, partner_gen"& _ 
                "der, partner_cc, partner_nif, partner_address, partner_postal, partner_city, par"& _ 
                "tner_phone, partner_mobile, partner_email, partner_parent, partner_is_competitio"& _ 
                "n, partner_class, partner_image_id, partner_card, partner_state, partner_month, "& _ 
                "partner_obs FROM ncc_2015.loo_partner"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_partnerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ncc_2015DataSet.loo_partnerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ncc_2015DataSet.loo_partnerDataTable = New ncc_2015DataSet.loo_partnerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ncc_2015DataSet.loo_partnerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ncc_2015DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "loo_partner")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_partner_id As Integer,  _
                    ByVal Original_partner_name As String,  _
                    ByVal Original_partner_birthdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_partner_add_date As Global.System.Nullable(Of Date),  _
                    ByVal Original_partner_gender As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_cc As String,  _
                    ByVal Original_partner_nif As String,  _
                    ByVal Original_partner_address As String,  _
                    ByVal Original_partner_postal As String,  _
                    ByVal Original_partner_city As String,  _
                    ByVal Original_partner_phone As String,  _
                    ByVal Original_partner_mobile As String,  _
                    ByVal Original_partner_email As String,  _
                    ByVal Original_partner_parent As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_is_competition As Global.System.Nullable(Of Long),  _
                    ByVal Original_partner_class As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_image_id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_card As String,  _
                    ByVal Original_partner_state As Global.System.Nullable(Of Long),  _
                    ByVal Original_partner_month As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_partner_id,Integer)
            If (Original_partner_name Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_partner_name,String)
            End If
            If (Original_partner_birthdate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_partner_birthdate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_add_date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_partner_add_date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_gender.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_partner_gender.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_cc Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_partner_cc,String)
            End If
            If (Original_partner_nif Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_partner_nif,String)
            End If
            If (Original_partner_address Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_partner_address,String)
            End If
            If (Original_partner_postal Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_partner_postal,String)
            End If
            If (Original_partner_city Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_partner_city,String)
            End If
            If (Original_partner_phone Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_partner_phone,String)
            End If
            If (Original_partner_mobile Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_partner_mobile,String)
            End If
            If (Original_partner_email Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_partner_email,String)
            End If
            If (Original_partner_parent.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_partner_parent.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_is_competition.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_partner_is_competition.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_class.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_partner_class.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_image_id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_partner_image_id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_card Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_partner_card,String)
            End If
            If (Original_partner_state.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_partner_state.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_month.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_partner_month.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal partner_id As Integer,  _
                    ByVal partner_name As String,  _
                    ByVal partner_birthdate As Global.System.Nullable(Of Date),  _
                    ByVal partner_add_date As Global.System.Nullable(Of Date),  _
                    ByVal partner_gender As Global.System.Nullable(Of Integer),  _
                    ByVal partner_cc As String,  _
                    ByVal partner_nif As String,  _
                    ByVal partner_address As String,  _
                    ByVal partner_postal As String,  _
                    ByVal partner_city As String,  _
                    ByVal partner_phone As String,  _
                    ByVal partner_mobile As String,  _
                    ByVal partner_email As String,  _
                    ByVal partner_parent As Global.System.Nullable(Of Integer),  _
                    ByVal partner_is_competition As Global.System.Nullable(Of Long),  _
                    ByVal partner_class As Global.System.Nullable(Of Integer),  _
                    ByVal partner_image_id As Global.System.Nullable(Of Integer),  _
                    ByVal partner_card As String,  _
                    ByVal partner_state As Global.System.Nullable(Of Long),  _
                    ByVal partner_month As Global.System.Nullable(Of Integer),  _
                    ByVal partner_obs As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(partner_id,Integer)
            If (partner_name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(partner_name,String)
            End If
            If (partner_birthdate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(partner_birthdate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (partner_add_date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(partner_add_date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (partner_gender.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(partner_gender.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (partner_cc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(partner_cc,String)
            End If
            If (partner_nif Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(partner_nif,String)
            End If
            If (partner_address Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(partner_address,String)
            End If
            If (partner_postal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(partner_postal,String)
            End If
            If (partner_city Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(partner_city,String)
            End If
            If (partner_phone Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(partner_phone,String)
            End If
            If (partner_mobile Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(partner_mobile,String)
            End If
            If (partner_email Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(partner_email,String)
            End If
            If (partner_parent.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(partner_parent.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (partner_is_competition.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(partner_is_competition.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (partner_class.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(partner_class.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (partner_image_id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(partner_image_id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (partner_card Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(partner_card,String)
            End If
            If (partner_state.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(partner_state.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (partner_month.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(partner_month.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (partner_obs Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(partner_obs,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal partner_id As Integer,  _
                    ByVal partner_name As String,  _
                    ByVal partner_birthdate As Global.System.Nullable(Of Date),  _
                    ByVal partner_add_date As Global.System.Nullable(Of Date),  _
                    ByVal partner_gender As Global.System.Nullable(Of Integer),  _
                    ByVal partner_cc As String,  _
                    ByVal partner_nif As String,  _
                    ByVal partner_address As String,  _
                    ByVal partner_postal As String,  _
                    ByVal partner_city As String,  _
                    ByVal partner_phone As String,  _
                    ByVal partner_mobile As String,  _
                    ByVal partner_email As String,  _
                    ByVal partner_parent As Global.System.Nullable(Of Integer),  _
                    ByVal partner_is_competition As Global.System.Nullable(Of Long),  _
                    ByVal partner_class As Global.System.Nullable(Of Integer),  _
                    ByVal partner_image_id As Global.System.Nullable(Of Integer),  _
                    ByVal partner_card As String,  _
                    ByVal partner_state As Global.System.Nullable(Of Long),  _
                    ByVal partner_month As Global.System.Nullable(Of Integer),  _
                    ByVal partner_obs As String,  _
                    ByVal Original_partner_id As Integer,  _
                    ByVal Original_partner_name As String,  _
                    ByVal Original_partner_birthdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_partner_add_date As Global.System.Nullable(Of Date),  _
                    ByVal Original_partner_gender As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_cc As String,  _
                    ByVal Original_partner_nif As String,  _
                    ByVal Original_partner_address As String,  _
                    ByVal Original_partner_postal As String,  _
                    ByVal Original_partner_city As String,  _
                    ByVal Original_partner_phone As String,  _
                    ByVal Original_partner_mobile As String,  _
                    ByVal Original_partner_email As String,  _
                    ByVal Original_partner_parent As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_is_competition As Global.System.Nullable(Of Long),  _
                    ByVal Original_partner_class As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_image_id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_card As String,  _
                    ByVal Original_partner_state As Global.System.Nullable(Of Long),  _
                    ByVal Original_partner_month As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(partner_id,Integer)
            If (partner_name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(partner_name,String)
            End If
            If (partner_birthdate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(partner_birthdate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (partner_add_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(partner_add_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (partner_gender.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(partner_gender.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (partner_cc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(partner_cc,String)
            End If
            If (partner_nif Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(partner_nif,String)
            End If
            If (partner_address Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(partner_address,String)
            End If
            If (partner_postal Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(partner_postal,String)
            End If
            If (partner_city Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(partner_city,String)
            End If
            If (partner_phone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(partner_phone,String)
            End If
            If (partner_mobile Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(partner_mobile,String)
            End If
            If (partner_email Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(partner_email,String)
            End If
            If (partner_parent.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(partner_parent.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (partner_is_competition.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(partner_is_competition.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (partner_class.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(partner_class.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (partner_image_id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(partner_image_id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (partner_card Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(partner_card,String)
            End If
            If (partner_state.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(partner_state.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (partner_month.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(partner_month.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (partner_obs Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(partner_obs,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_partner_id,Integer)
            If (Original_partner_name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_partner_name,String)
            End If
            If (Original_partner_birthdate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_partner_birthdate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_add_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_partner_add_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_gender.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_partner_gender.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_cc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_partner_cc,String)
            End If
            If (Original_partner_nif Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_partner_nif,String)
            End If
            If (Original_partner_address Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_partner_address,String)
            End If
            If (Original_partner_postal Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_partner_postal,String)
            End If
            If (Original_partner_city Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_partner_city,String)
            End If
            If (Original_partner_phone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_partner_phone,String)
            End If
            If (Original_partner_mobile Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_partner_mobile,String)
            End If
            If (Original_partner_email Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_partner_email,String)
            End If
            If (Original_partner_parent.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_partner_parent.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_is_competition.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_partner_is_competition.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_class.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_partner_class.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_image_id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_partner_image_id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_card Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_partner_card,String)
            End If
            If (Original_partner_state.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_partner_state.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_partner_month.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_partner_month.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal partner_name As String,  _
                    ByVal partner_birthdate As Global.System.Nullable(Of Date),  _
                    ByVal partner_add_date As Global.System.Nullable(Of Date),  _
                    ByVal partner_gender As Global.System.Nullable(Of Integer),  _
                    ByVal partner_cc As String,  _
                    ByVal partner_nif As String,  _
                    ByVal partner_address As String,  _
                    ByVal partner_postal As String,  _
                    ByVal partner_city As String,  _
                    ByVal partner_phone As String,  _
                    ByVal partner_mobile As String,  _
                    ByVal partner_email As String,  _
                    ByVal partner_parent As Global.System.Nullable(Of Integer),  _
                    ByVal partner_is_competition As Global.System.Nullable(Of Long),  _
                    ByVal partner_class As Global.System.Nullable(Of Integer),  _
                    ByVal partner_image_id As Global.System.Nullable(Of Integer),  _
                    ByVal partner_card As String,  _
                    ByVal partner_state As Global.System.Nullable(Of Long),  _
                    ByVal partner_month As Global.System.Nullable(Of Integer),  _
                    ByVal partner_obs As String,  _
                    ByVal Original_partner_id As Integer,  _
                    ByVal Original_partner_name As String,  _
                    ByVal Original_partner_birthdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_partner_add_date As Global.System.Nullable(Of Date),  _
                    ByVal Original_partner_gender As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_cc As String,  _
                    ByVal Original_partner_nif As String,  _
                    ByVal Original_partner_address As String,  _
                    ByVal Original_partner_postal As String,  _
                    ByVal Original_partner_city As String,  _
                    ByVal Original_partner_phone As String,  _
                    ByVal Original_partner_mobile As String,  _
                    ByVal Original_partner_email As String,  _
                    ByVal Original_partner_parent As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_is_competition As Global.System.Nullable(Of Long),  _
                    ByVal Original_partner_class As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_image_id As Global.System.Nullable(Of Integer),  _
                    ByVal Original_partner_card As String,  _
                    ByVal Original_partner_state As Global.System.Nullable(Of Long),  _
                    ByVal Original_partner_month As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_partner_id, partner_name, partner_birthdate, partner_add_date, partner_gender, partner_cc, partner_nif, partner_address, partner_postal, partner_city, partner_phone, partner_mobile, partner_email, partner_parent, partner_is_competition, partner_class, partner_image_id, partner_card, partner_state, partner_month, partner_obs, Original_partner_id, Original_partner_name, Original_partner_birthdate, Original_partner_add_date, Original_partner_gender, Original_partner_cc, Original_partner_nif, Original_partner_address, Original_partner_postal, Original_partner_city, Original_partner_phone, Original_partner_mobile, Original_partner_email, Original_partner_parent, Original_partner_is_competition, Original_partner_class, Original_partner_image_id, Original_partner_card, Original_partner_state, Original_partner_month)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_partner_classTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_partner_class"
            tableMapping.ColumnMappings.Add("class_id", "class_id")
            tableMapping.ColumnMappings.Add("class_name", "class_name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `ncc_2015`.`loo_partner_class` WHERE ((`class_id` = :Original_class_i"& _ 
                "d) AND (`class_name` = :Original_class_name))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_class_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "class_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_class_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "class_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `ncc_2015`.`loo_partner_class` (`class_name`) VALUES (:class_name)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "class_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "class_name"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `ncc_2015`.`loo_partner_class` SET `class_name` = :class_name WHERE ((`cla"& _ 
                "ss_id` = :Original_class_id) AND (`class_name` = :Original_class_name))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "class_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "class_name"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_class_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "class_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_class_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "class_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT class_id, class_name FROM ncc_2015.loo_partner_class"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_partner_classDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ncc_2015DataSet.loo_partner_classDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ncc_2015DataSet.loo_partner_classDataTable = New ncc_2015DataSet.loo_partner_classDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ncc_2015DataSet.loo_partner_classDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ncc_2015DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "loo_partner_class")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_class_id As Integer, ByVal Original_class_name As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_class_id,Integer)
            If (Original_class_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_class_name")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_class_name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal class_name As String) As Integer
            If (class_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("class_name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(class_name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal class_name As String, ByVal Original_class_id As Integer, ByVal Original_class_name As String) As Integer
            If (class_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("class_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(class_name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_class_id,Integer)
            If (Original_class_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_class_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_class_name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_partner_timetableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_partner_timetable"
            tableMapping.ColumnMappings.Add("timetable_id", "timetable_id")
            tableMapping.ColumnMappings.Add("timetable_day", "timetable_day")
            tableMapping.ColumnMappings.Add("timetable_since_hour", "timetable_since_hour")
            tableMapping.ColumnMappings.Add("timetable_since_minutes", "timetable_since_minutes")
            tableMapping.ColumnMappings.Add("timetable_to_hour", "timetable_to_hour")
            tableMapping.ColumnMappings.Add("timetable_to_minutes", "timetable_to_minutes")
            tableMapping.ColumnMappings.Add("timetable_partner_id", "timetable_partner_id")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `ncc_2015`.`loo_partner_timetable` WHERE ((`timetable_id` = :Original"& _ 
                "_timetable_id) AND ((:IsNull_timetable_day = 1 AND `timetable_day` IS NULL) OR ("& _ 
                "`timetable_day` = :Original_timetable_day)) AND ((:IsNull_timetable_since_hour ="& _ 
                " 1 AND `timetable_since_hour` IS NULL) OR (`timetable_since_hour` = :Original_ti"& _ 
                "metable_since_hour)) AND ((:IsNull_timetable_since_minutes = 1 AND `timetable_si"& _ 
                "nce_minutes` IS NULL) OR (`timetable_since_minutes` = :Original_timetable_since_"& _ 
                "minutes)) AND ((:IsNull_timetable_to_hour = 1 AND `timetable_to_hour` IS NULL) O"& _ 
                "R (`timetable_to_hour` = :Original_timetable_to_hour)) AND ((:IsNull_timetable_t"& _ 
                "o_minutes = 1 AND `timetable_to_minutes` IS NULL) OR (`timetable_to_minutes` = :"& _ 
                "Original_timetable_to_minutes)) AND ((:IsNull_timetable_partner_id = 1 AND `time"& _ 
                "table_partner_id` IS NULL) OR (`timetable_partner_id` = :Original_timetable_part"& _ 
                "ner_id)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_day"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_day"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_day"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_day"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_since_hour"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_since_hour"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_since_hour"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_since_hour"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_since_minutes"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_since_minutes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_since_minutes"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_since_minutes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_to_hour"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_to_hour"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_to_hour"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_to_hour"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_to_minutes"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_to_minutes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_to_minutes"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_to_minutes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_partner_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_partner_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `ncc_2015`.`loo_partner_timetable` (`timetable_day`, `timetable_since"& _ 
                "_hour`, `timetable_since_minutes`, `timetable_to_hour`, `timetable_to_minutes`, "& _ 
                "`timetable_partner_id`) VALUES (:timetable_day, :timetable_since_hour, :timetabl"& _ 
                "e_since_minutes, :timetable_to_hour, :timetable_to_minutes, :timetable_partner_i"& _ 
                "d)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_day"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_day"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_since_hour"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_since_hour"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_since_minutes"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_since_minutes"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_to_hour"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_to_hour"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_to_minutes"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_to_minutes"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_partner_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `ncc_2015`.`loo_partner_timetable` SET `timetable_day` = :timetable_day, `"& _ 
                "timetable_since_hour` = :timetable_since_hour, `timetable_since_minutes` = :time"& _ 
                "table_since_minutes, `timetable_to_hour` = :timetable_to_hour, `timetable_to_min"& _ 
                "utes` = :timetable_to_minutes, `timetable_partner_id` = :timetable_partner_id WH"& _ 
                "ERE ((`timetable_id` = :Original_timetable_id) AND ((:IsNull_timetable_day = 1 A"& _ 
                "ND `timetable_day` IS NULL) OR (`timetable_day` = :Original_timetable_day)) AND "& _ 
                "((:IsNull_timetable_since_hour = 1 AND `timetable_since_hour` IS NULL) OR (`time"& _ 
                "table_since_hour` = :Original_timetable_since_hour)) AND ((:IsNull_timetable_sin"& _ 
                "ce_minutes = 1 AND `timetable_since_minutes` IS NULL) OR (`timetable_since_minut"& _ 
                "es` = :Original_timetable_since_minutes)) AND ((:IsNull_timetable_to_hour = 1 AN"& _ 
                "D `timetable_to_hour` IS NULL) OR (`timetable_to_hour` = :Original_timetable_to_"& _ 
                "hour)) AND ((:IsNull_timetable_to_minutes = 1 AND `timetable_to_minutes` IS NULL"& _ 
                ") OR (`timetable_to_minutes` = :Original_timetable_to_minutes)) AND ((:IsNull_ti"& _ 
                "metable_partner_id = 1 AND `timetable_partner_id` IS NULL) OR (`timetable_partne"& _ 
                "r_id` = :Original_timetable_partner_id)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_day"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_day"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_since_hour"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_since_hour"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_since_minutes"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_since_minutes"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_to_hour"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_to_hour"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_to_minutes"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_to_minutes"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "timetable_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_partner_id"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_day"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_day"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_day"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_day"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_since_hour"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_since_hour"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_since_hour"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_since_hour"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_since_minutes"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_since_minutes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_since_minutes"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_since_minutes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_to_hour"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_to_hour"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_to_hour"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_to_hour"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_to_minutes"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_to_minutes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_to_minutes"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "timetable_to_minutes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_timetable_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_partner_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_timetable_partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "timetable_partner_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT timetable_id, timetable_day, timetable_since_hour, timetable_since_minutes"& _ 
                ", timetable_to_hour, timetable_to_minutes, timetable_partner_id FROM ncc_2015.lo"& _ 
                "o_partner_timetable"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_partner_timetableDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ncc_2015DataSet.loo_partner_timetableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ncc_2015DataSet.loo_partner_timetableDataTable = New ncc_2015DataSet.loo_partner_timetableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ncc_2015DataSet.loo_partner_timetableDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ncc_2015DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "loo_partner_timetable")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_timetable_id As Integer, ByVal Original_timetable_day As Global.System.Nullable(Of Integer), ByVal Original_timetable_since_hour As String, ByVal Original_timetable_since_minutes As String, ByVal Original_timetable_to_hour As String, ByVal Original_timetable_to_minutes As String, ByVal Original_timetable_partner_id As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_timetable_id,Integer)
            If (Original_timetable_day.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_timetable_day.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_timetable_since_hour Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_timetable_since_hour,String)
            End If
            If (Original_timetable_since_minutes Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_timetable_since_minutes,String)
            End If
            If (Original_timetable_to_hour Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_timetable_to_hour,String)
            End If
            If (Original_timetable_to_minutes Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_timetable_to_minutes,String)
            End If
            If (Original_timetable_partner_id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_timetable_partner_id.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal timetable_day As Global.System.Nullable(Of Integer), ByVal timetable_since_hour As String, ByVal timetable_since_minutes As String, ByVal timetable_to_hour As String, ByVal timetable_to_minutes As String, ByVal timetable_partner_id As Global.System.Nullable(Of Integer)) As Integer
            If (timetable_day.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(timetable_day.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (timetable_since_hour Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(timetable_since_hour,String)
            End If
            If (timetable_since_minutes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(timetable_since_minutes,String)
            End If
            If (timetable_to_hour Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(timetable_to_hour,String)
            End If
            If (timetable_to_minutes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(timetable_to_minutes,String)
            End If
            If (timetable_partner_id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(timetable_partner_id.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal timetable_day As Global.System.Nullable(Of Integer), ByVal timetable_since_hour As String, ByVal timetable_since_minutes As String, ByVal timetable_to_hour As String, ByVal timetable_to_minutes As String, ByVal timetable_partner_id As Global.System.Nullable(Of Integer), ByVal Original_timetable_id As Integer, ByVal Original_timetable_day As Global.System.Nullable(Of Integer), ByVal Original_timetable_since_hour As String, ByVal Original_timetable_since_minutes As String, ByVal Original_timetable_to_hour As String, ByVal Original_timetable_to_minutes As String, ByVal Original_timetable_partner_id As Global.System.Nullable(Of Integer)) As Integer
            If (timetable_day.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(timetable_day.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (timetable_since_hour Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(timetable_since_hour,String)
            End If
            If (timetable_since_minutes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(timetable_since_minutes,String)
            End If
            If (timetable_to_hour Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(timetable_to_hour,String)
            End If
            If (timetable_to_minutes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(timetable_to_minutes,String)
            End If
            If (timetable_partner_id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(timetable_partner_id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_timetable_id,Integer)
            If (Original_timetable_day.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_timetable_day.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_timetable_since_hour Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_timetable_since_hour,String)
            End If
            If (Original_timetable_since_minutes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_timetable_since_minutes,String)
            End If
            If (Original_timetable_to_hour Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_timetable_to_hour,String)
            End If
            If (Original_timetable_to_minutes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_timetable_to_minutes,String)
            End If
            If (Original_timetable_partner_id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_timetable_partner_id.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_userTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_user"
            tableMapping.ColumnMappings.Add("user_id", "user_id")
            tableMapping.ColumnMappings.Add("user_name", "user_name")
            tableMapping.ColumnMappings.Add("user_password", "user_password")
            tableMapping.ColumnMappings.Add("user_email", "user_email")
            tableMapping.ColumnMappings.Add("user_is_super", "user_is_super")
            tableMapping.ColumnMappings.Add("user_is_admin", "user_is_admin")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `ncc_2015`.`loo_user` WHERE ((`user_id` = :Original_user_id) AND ((:I"& _ 
                "sNull_user_name = 1 AND `user_name` IS NULL) OR (`user_name` = :Original_user_na"& _ 
                "me)) AND ((:IsNull_user_password = 1 AND `user_password` IS NULL) OR (`user_pass"& _ 
                "word` = :Original_user_password)) AND ((:IsNull_user_email = 1 AND `user_email` "& _ 
                "IS NULL) OR (`user_email` = :Original_user_email)) AND ((:IsNull_user_is_super ="& _ 
                " 1 AND `user_is_super` IS NULL) OR (`user_is_super` = :Original_user_is_super)) "& _ 
                "AND ((:IsNull_user_is_admin = 1 AND `user_is_admin` IS NULL) OR (`user_is_admin`"& _ 
                " = :Original_user_is_admin)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_name"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "user_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_password"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_password"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_password"
            param.DbType = Global.System.Data.DbType.AnsiStringFixedLength
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.[Char]
            param.IsNullable = true
            param.SourceColumn = "user_password"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_email"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_email"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_email"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "user_email"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_is_super"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_is_super"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_is_super"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "user_is_super"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_is_admin"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_is_admin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_is_admin"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "user_is_admin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `ncc_2015`.`loo_user` (`user_id`, `user_name`, `user_password`, `user"& _ 
                "_email`, `user_is_super`, `user_is_admin`) VALUES (:user_id, :user_name, :user_p"& _ 
                "assword, :user_email, :user_is_super, :user_is_admin)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_id"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "user_name"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_password"
            param.DbType = Global.System.Data.DbType.AnsiStringFixedLength
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.[Char]
            param.IsNullable = true
            param.SourceColumn = "user_password"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_email"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "user_email"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_is_super"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "user_is_super"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_is_admin"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "user_is_admin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `ncc_2015`.`loo_user` SET `user_id` = :user_id, `user_name` = :user_name, "& _ 
                "`user_password` = :user_password, `user_email` = :user_email, `user_is_super` = "& _ 
                ":user_is_super, `user_is_admin` = :user_is_admin WHERE ((`user_id` = :Original_u"& _ 
                "ser_id) AND ((:IsNull_user_name = 1 AND `user_name` IS NULL) OR (`user_name` = :"& _ 
                "Original_user_name)) AND ((:IsNull_user_password = 1 AND `user_password` IS NULL"& _ 
                ") OR (`user_password` = :Original_user_password)) AND ((:IsNull_user_email = 1 A"& _ 
                "ND `user_email` IS NULL) OR (`user_email` = :Original_user_email)) AND ((:IsNull"& _ 
                "_user_is_super = 1 AND `user_is_super` IS NULL) OR (`user_is_super` = :Original_"& _ 
                "user_is_super)) AND ((:IsNull_user_is_admin = 1 AND `user_is_admin` IS NULL) OR "& _ 
                "(`user_is_admin` = :Original_user_is_admin)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_id"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "user_name"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_password"
            param.DbType = Global.System.Data.DbType.AnsiStringFixedLength
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.[Char]
            param.IsNullable = true
            param.SourceColumn = "user_password"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_email"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "user_email"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_is_super"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "user_is_super"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "user_is_admin"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "user_is_admin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_name"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_name"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "user_name"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_password"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_password"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_password"
            param.DbType = Global.System.Data.DbType.AnsiStringFixedLength
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.[Char]
            param.IsNullable = true
            param.SourceColumn = "user_password"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_email"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_email"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_email"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "user_email"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_is_super"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_is_super"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_is_super"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "user_is_super"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "IsNull_user_is_admin"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "user_is_admin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_user_is_admin"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Bit
            param.IsNullable = true
            param.SourceColumn = "user_is_admin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT user_id, user_name, user_password, user_email, user_is_super, user_is_admi"& _ 
                "n FROM ncc_2015.loo_user"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_userDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ncc_2015DataSet.loo_userDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ncc_2015DataSet.loo_userDataTable = New ncc_2015DataSet.loo_userDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ncc_2015DataSet.loo_userDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ncc_2015DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "loo_user")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_user_id As Integer, ByVal Original_user_name As String, ByVal Original_user_password As String, ByVal Original_user_email As String, ByVal Original_user_is_super As Global.System.Nullable(Of Long), ByVal Original_user_is_admin As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_user_id,Integer)
            If (Original_user_name Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_user_name,String)
            End If
            If (Original_user_password Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_user_password,String)
            End If
            If (Original_user_email Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_user_email,String)
            End If
            If (Original_user_is_super.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_user_is_super.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_user_is_admin.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_user_is_admin.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal user_id As Integer, ByVal user_name As String, ByVal user_password As String, ByVal user_email As String, ByVal user_is_super As Global.System.Nullable(Of Long), ByVal user_is_admin As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(user_id,Integer)
            If (user_name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(user_name,String)
            End If
            If (user_password Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(user_password,String)
            End If
            If (user_email Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(user_email,String)
            End If
            If (user_is_super.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(user_is_super.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (user_is_admin.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(user_is_admin.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal user_id As Integer, ByVal user_name As String, ByVal user_password As String, ByVal user_email As String, ByVal user_is_super As Global.System.Nullable(Of Long), ByVal user_is_admin As Global.System.Nullable(Of Long), ByVal Original_user_id As Integer, ByVal Original_user_name As String, ByVal Original_user_password As String, ByVal Original_user_email As String, ByVal Original_user_is_super As Global.System.Nullable(Of Long), ByVal Original_user_is_admin As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(user_id,Integer)
            If (user_name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(user_name,String)
            End If
            If (user_password Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(user_password,String)
            End If
            If (user_email Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(user_email,String)
            End If
            If (user_is_super.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(user_is_super.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (user_is_admin.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(user_is_admin.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_user_id,Integer)
            If (Original_user_name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_user_name,String)
            End If
            If (Original_user_password Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_user_password,String)
            End If
            If (Original_user_email Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_user_email,String)
            End If
            If (Original_user_is_super.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_user_is_super.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_user_is_admin.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_user_is_admin.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal user_name As String, ByVal user_password As String, ByVal user_email As String, ByVal user_is_super As Global.System.Nullable(Of Long), ByVal user_is_admin As Global.System.Nullable(Of Long), ByVal Original_user_id As Integer, ByVal Original_user_name As String, ByVal Original_user_password As String, ByVal Original_user_email As String, ByVal Original_user_is_super As Global.System.Nullable(Of Long), ByVal Original_user_is_admin As Global.System.Nullable(Of Long)) As Integer
            Return Me.Update(Original_user_id, user_name, user_password, user_email, user_is_super, user_is_admin, Original_user_id, Original_user_name, Original_user_password, Original_user_email, Original_user_is_super, Original_user_is_admin)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_sysTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_sys"
            tableMapping.ColumnMappings.Add("sys_period", "sys_period")
            tableMapping.ColumnMappings.Add("sys_id", "sys_id")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `ncc_2015`.`loo_sys` WHERE ((`sys_period` = :Original_sys_period) AND"& _ 
                " (`sys_id` = :Original_sys_id))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_sys_period"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sys_period"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_sys_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "sys_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `ncc_2015`.`loo_sys` (`sys_period`) VALUES (:sys_period)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "sys_period"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sys_period"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Devart.Data.MySql.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `ncc_2015`.`loo_sys` SET `sys_period` = :sys_period WHERE ((`sys_period` ="& _ 
                " :Original_sys_period) AND (`sys_id` = :Original_sys_id))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "sys_period"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sys_period"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_sys_period"
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sys_period"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "Original_sys_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "sys_id"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT sys_period, sys_id FROM ncc_2015.loo_sys"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_sysDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ncc_2015DataSet.loo_sysDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ncc_2015DataSet.loo_sysDataTable = New ncc_2015DataSet.loo_sysDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ncc_2015DataSet.loo_sysDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ncc_2015DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "loo_sys")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_sys_period As String, ByVal Original_sys_id As Integer) As Integer
            If (Original_sys_period Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_sys_period")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_sys_period,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_sys_id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal sys_period As String) As Integer
            If (sys_period Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sys_period")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(sys_period,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal sys_period As String, ByVal Original_sys_period As String, ByVal Original_sys_id As Integer) As Integer
            If (sys_period Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sys_period")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(sys_period,String)
            End If
            If (Original_sys_period Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_sys_period")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_sys_period,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_sys_id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class partner_infoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "partner_info"
            tableMapping.ColumnMappings.Add("partner_id", "partner_id")
            tableMapping.ColumnMappings.Add("partner_name", "partner_name")
            tableMapping.ColumnMappings.Add("parent_name", "parent_name")
            tableMapping.ColumnMappings.Add("partner_birthdate", "partner_birthdate")
            tableMapping.ColumnMappings.Add("partner_add_date", "partner_add_date")
            tableMapping.ColumnMappings.Add("partner_gender", "partner_gender")
            tableMapping.ColumnMappings.Add("partner_cc", "partner_cc")
            tableMapping.ColumnMappings.Add("partner_nif", "partner_nif")
            tableMapping.ColumnMappings.Add("partner_address", "partner_address")
            tableMapping.ColumnMappings.Add("partner_postal", "partner_postal")
            tableMapping.ColumnMappings.Add("partner_city", "partner_city")
            tableMapping.ColumnMappings.Add("partner_phone", "partner_phone")
            tableMapping.ColumnMappings.Add("partner_mobile", "partner_mobile")
            tableMapping.ColumnMappings.Add("partner_email", "partner_email")
            tableMapping.ColumnMappings.Add("image", "image")
            tableMapping.ColumnMappings.Add("image_extension", "image_extension")
            tableMapping.ColumnMappings.Add("partner_obs", "partner_obs")
            tableMapping.ColumnMappings.Add("parent_nif", "parent_nif")
            tableMapping.ColumnMappings.Add("parent_address", "parent_address")
            tableMapping.ColumnMappings.Add("parent_postal", "parent_postal")
            tableMapping.ColumnMappings.Add("parent_city", "parent_city")
            tableMapping.ColumnMappings.Add("parent_phone", "parent_phone")
            tableMapping.ColumnMappings.Add("parent_mobile", "parent_mobile")
            tableMapping.ColumnMappings.Add("parent_email", "parent_email")
            tableMapping.ColumnMappings.Add("medic_card_number", "medic_card_number")
            tableMapping.ColumnMappings.Add("medic_entity", "medic_entity")
            tableMapping.ColumnMappings.Add("class_name", "class_name")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        loo_partner_1.partner_id, loo_partner.partner_name AS parent_name, "& _ 
                "loo_partner_1.partner_name, loo_partner_1.partner_birthdate, loo_partner_1.partn"& _ 
                "er_add_date, loo_partner_1.partner_gender, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         loo_partne"& _ 
                "r_1.partner_cc, loo_partner_1.partner_nif, loo_partner_1.partner_address, loo_pa"& _ 
                "rtner_1.partner_postal, loo_partner_1.partner_city, loo_partner_1.partner_phone,"& _ 
                " loo_partner_1.partner_mobile, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         loo_partner_1.partner_"& _ 
                "email, loo_image.image, loo_image.image_extension, loo_partner_1.partner_obs, lo"& _ 
                "o_partner.partner_nif AS parent_nif, loo_partner.partner_address AS parent_addre"& _ 
                "ss, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         loo_partner.partner_postal AS parent_postal, loo_"& _ 
                "partner.partner_city AS parent_city, loo_partner.partner_phone AS parent_phone, "& _ 
                "loo_partner.partner_mobile AS parent_mobile, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         loo_part"& _ 
                "ner.partner_email AS parent_email, loo_medic.medic_card_number, loo_medic.medic_"& _ 
                "entity, loo_partner_class.class_name"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            loo_partner loo_partner_1 "& _ 
                "LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         loo_partner_class ON loo_partner_1.par"& _ 
                "tner_class = loo_partner_class.class_id LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  loo_partner ON loo_partner_1.partner_parent = loo_partner.partner_id LEFT OUTE"& _ 
                "R JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         loo_image ON loo_partner_1.partner_image_id = l"& _ 
                "oo_image.image_id LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         loo_medic ON loo_par"& _ 
                "tner_1.partner_id = loo_medic.medic_partner_id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (loo_partner_1.part"& _ 
                "ner_id = :PARTNERID)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "PARTNERID"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.IsNullable = true
            param.SourceColumn = "partner_id"
            Me._commandCollection(0).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.partner_infoDataTable, ByVal PARTNERID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PARTNERID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal PARTNERID As Integer) As ncc_2015DataSet.partner_infoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PARTNERID,Integer)
            Dim dataTable As ncc_2015DataSet.partner_infoDataTable = New ncc_2015DataSet.partner_infoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_partner_class1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_partner_class1"
            tableMapping.ColumnMappings.Add("partner_id", "partner_id")
            tableMapping.ColumnMappings.Add("partner_name", "partner_name")
            tableMapping.ColumnMappings.Add("dia", "dia")
            tableMapping.ColumnMappings.Add("desde", "desde")
            tableMapping.ColumnMappings.Add("ate", "ate")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "ncc_2015.loo_partner_class"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "class_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.Size = 2147483647
            param.IsNullable = true
            param.SourceColumn = Nothing
            Me._commandCollection(0).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_partner_class1DataTable, ByVal class_id As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (class_id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(class_id.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal class_id As Global.System.Nullable(Of Integer)) As ncc_2015DataSet.loo_partner_class1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (class_id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(class_id.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ncc_2015DataSet.loo_partner_class1DataTable = New ncc_2015DataSet.loo_partner_class1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class loo_partner_timetable1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Devart.Data.MySql.MySqlDataAdapter
        
        Private _connection As Global.Devart.Data.MySql.MySqlConnection
        
        Private _transaction As Global.System.Data.Common.DbTransaction
        
        Private _commandCollection() As Global.Devart.Data.MySql.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Devart.Data.MySql.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.Devart.Data.MySql.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Devart.Data.MySql.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Common.DbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Devart.Data.MySql.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Devart.Data.MySql.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "loo_partner_timetable1"
            tableMapping.ColumnMappings.Add("d", "d")
            tableMapping.ColumnMappings.Add("dia", "dia")
            tableMapping.ColumnMappings.Add("desde", "desde")
            tableMapping.ColumnMappings.Add("ate", "ate")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Devart.Data.MySql.MySqlConnection()
            Me._connection.ConnectionString = Global.NCC2015.My.MySettings.Default.ncc_cs
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Devart.Data.MySql.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.Devart.Data.MySql.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "ncc_2015.loo_partner_timetable"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Dim param As Global.Devart.Data.MySql.MySqlParameter = New Global.Devart.Data.MySql.MySqlParameter()
            param.ParameterName = "partner_id"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlType = Global.Devart.Data.MySql.MySqlType.Int
            param.Size = 2147483647
            param.IsNullable = true
            param.SourceColumn = Nothing
            Me._commandCollection(0).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ncc_2015DataSet.loo_partner_timetable1DataTable, ByVal partner_id As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (partner_id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(partner_id.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal partner_id As Global.System.Nullable(Of Integer)) As ncc_2015DataSet.loo_partner_timetable1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (partner_id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(partner_id.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As ncc_2015DataSet.loo_partner_timetable1DataTable = New ncc_2015DataSet.loo_partner_timetable1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _loo_imageTableAdapter As loo_imageTableAdapter
        
        Private _loo_medicTableAdapter As loo_medicTableAdapter
        
        Private _loo_partnerTableAdapter As loo_partnerTableAdapter
        
        Private _loo_partner_classTableAdapter As loo_partner_classTableAdapter
        
        Private _loo_partner_timetableTableAdapter As loo_partner_timetableTableAdapter
        
        Private _loo_userTableAdapter As loo_userTableAdapter
        
        Private _loo_sysTableAdapter As loo_sysTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property loo_imageTableAdapter() As loo_imageTableAdapter
            Get
                Return Me._loo_imageTableAdapter
            End Get
            Set
                Me._loo_imageTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property loo_medicTableAdapter() As loo_medicTableAdapter
            Get
                Return Me._loo_medicTableAdapter
            End Get
            Set
                Me._loo_medicTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property loo_partnerTableAdapter() As loo_partnerTableAdapter
            Get
                Return Me._loo_partnerTableAdapter
            End Get
            Set
                Me._loo_partnerTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property loo_partner_classTableAdapter() As loo_partner_classTableAdapter
            Get
                Return Me._loo_partner_classTableAdapter
            End Get
            Set
                Me._loo_partner_classTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property loo_partner_timetableTableAdapter() As loo_partner_timetableTableAdapter
            Get
                Return Me._loo_partner_timetableTableAdapter
            End Get
            Set
                Me._loo_partner_timetableTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property loo_userTableAdapter() As loo_userTableAdapter
            Get
                Return Me._loo_userTableAdapter
            End Get
            Set
                Me._loo_userTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property loo_sysTableAdapter() As loo_sysTableAdapter
            Get
                Return Me._loo_sysTableAdapter
            End Get
            Set
                Me._loo_sysTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._loo_imageTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._loo_imageTableAdapter.Connection) Is Nothing)) Then
                    Return Me._loo_imageTableAdapter.Connection
                End If
                If ((Not (Me._loo_medicTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._loo_medicTableAdapter.Connection) Is Nothing)) Then
                    Return Me._loo_medicTableAdapter.Connection
                End If
                If ((Not (Me._loo_partnerTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._loo_partnerTableAdapter.Connection) Is Nothing)) Then
                    Return Me._loo_partnerTableAdapter.Connection
                End If
                If ((Not (Me._loo_partner_classTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._loo_partner_classTableAdapter.Connection) Is Nothing)) Then
                    Return Me._loo_partner_classTableAdapter.Connection
                End If
                If ((Not (Me._loo_partner_timetableTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._loo_partner_timetableTableAdapter.Connection) Is Nothing)) Then
                    Return Me._loo_partner_timetableTableAdapter.Connection
                End If
                If ((Not (Me._loo_userTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._loo_userTableAdapter.Connection) Is Nothing)) Then
                    Return Me._loo_userTableAdapter.Connection
                End If
                If ((Not (Me._loo_sysTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._loo_sysTableAdapter.Connection) Is Nothing)) Then
                    Return Me._loo_sysTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._loo_imageTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._loo_medicTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._loo_partnerTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._loo_partner_classTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._loo_partner_timetableTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._loo_userTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._loo_sysTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ncc_2015DataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._loo_partnerTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.loo_partner.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._loo_partnerTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._loo_imageTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.loo_image.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._loo_imageTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._loo_medicTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.loo_medic.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._loo_medicTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._loo_partner_classTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.loo_partner_class.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._loo_partner_classTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._loo_partner_timetableTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.loo_partner_timetable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._loo_partner_timetableTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._loo_userTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.loo_user.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._loo_userTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._loo_sysTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.loo_sys.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._loo_sysTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ncc_2015DataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._loo_partnerTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.loo_partner.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._loo_partnerTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._loo_imageTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.loo_image.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._loo_imageTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._loo_medicTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.loo_medic.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._loo_medicTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._loo_partner_classTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.loo_partner_class.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._loo_partner_classTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._loo_partner_timetableTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.loo_partner_timetable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._loo_partner_timetableTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._loo_userTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.loo_user.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._loo_userTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._loo_sysTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.loo_sys.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._loo_sysTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ncc_2015DataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._loo_sysTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.loo_sys.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._loo_sysTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._loo_userTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.loo_user.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._loo_userTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._loo_partner_timetableTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.loo_partner_timetable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._loo_partner_timetableTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._loo_partner_classTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.loo_partner_class.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._loo_partner_classTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._loo_medicTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.loo_medic.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._loo_medicTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._loo_imageTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.loo_image.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._loo_imageTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._loo_partnerTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.loo_partner.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._loo_partnerTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ncc_2015DataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._loo_imageTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._loo_imageTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._loo_medicTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._loo_medicTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._loo_partnerTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._loo_partnerTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._loo_partner_classTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._loo_partner_classTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._loo_partner_timetableTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._loo_partner_timetableTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._loo_userTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._loo_userTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._loo_sysTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._loo_sysTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._loo_imageTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._loo_imageTableAdapter, Me._loo_imageTableAdapter.Connection)
                    Me._loo_imageTableAdapter.Connection = CType(workConnection,Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_imageTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Common.DbTransaction)
                    If Me._loo_imageTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._loo_imageTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._loo_imageTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._loo_medicTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._loo_medicTableAdapter, Me._loo_medicTableAdapter.Connection)
                    Me._loo_medicTableAdapter.Connection = CType(workConnection,Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_medicTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Common.DbTransaction)
                    If Me._loo_medicTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._loo_medicTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._loo_medicTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._loo_partnerTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._loo_partnerTableAdapter, Me._loo_partnerTableAdapter.Connection)
                    Me._loo_partnerTableAdapter.Connection = CType(workConnection,Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_partnerTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Common.DbTransaction)
                    If Me._loo_partnerTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._loo_partnerTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._loo_partnerTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._loo_partner_classTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._loo_partner_classTableAdapter, Me._loo_partner_classTableAdapter.Connection)
                    Me._loo_partner_classTableAdapter.Connection = CType(workConnection,Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_partner_classTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Common.DbTransaction)
                    If Me._loo_partner_classTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._loo_partner_classTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._loo_partner_classTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._loo_partner_timetableTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._loo_partner_timetableTableAdapter, Me._loo_partner_timetableTableAdapter.Connection)
                    Me._loo_partner_timetableTableAdapter.Connection = CType(workConnection,Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_partner_timetableTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Common.DbTransaction)
                    If Me._loo_partner_timetableTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._loo_partner_timetableTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._loo_partner_timetableTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._loo_userTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._loo_userTableAdapter, Me._loo_userTableAdapter.Connection)
                    Me._loo_userTableAdapter.Connection = CType(workConnection,Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_userTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Common.DbTransaction)
                    If Me._loo_userTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._loo_userTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._loo_userTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._loo_sysTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._loo_sysTableAdapter, Me._loo_sysTableAdapter.Connection)
                    Me._loo_sysTableAdapter.Connection = CType(workConnection,Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_sysTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Common.DbTransaction)
                    If Me._loo_sysTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._loo_sysTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._loo_sysTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._loo_imageTableAdapter) Is Nothing) Then
                    Me._loo_imageTableAdapter.Connection = CType(revertConnections(Me._loo_imageTableAdapter),Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_imageTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._loo_medicTableAdapter) Is Nothing) Then
                    Me._loo_medicTableAdapter.Connection = CType(revertConnections(Me._loo_medicTableAdapter),Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_medicTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._loo_partnerTableAdapter) Is Nothing) Then
                    Me._loo_partnerTableAdapter.Connection = CType(revertConnections(Me._loo_partnerTableAdapter),Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_partnerTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._loo_partner_classTableAdapter) Is Nothing) Then
                    Me._loo_partner_classTableAdapter.Connection = CType(revertConnections(Me._loo_partner_classTableAdapter),Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_partner_classTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._loo_partner_timetableTableAdapter) Is Nothing) Then
                    Me._loo_partner_timetableTableAdapter.Connection = CType(revertConnections(Me._loo_partner_timetableTableAdapter),Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_partner_timetableTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._loo_userTableAdapter) Is Nothing) Then
                    Me._loo_userTableAdapter.Connection = CType(revertConnections(Me._loo_userTableAdapter),Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_userTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._loo_sysTableAdapter) Is Nothing) Then
                    Me._loo_sysTableAdapter.Connection = CType(revertConnections(Me._loo_sysTableAdapter),Global.Devart.Data.MySql.MySqlConnection)
                    Me._loo_sysTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
